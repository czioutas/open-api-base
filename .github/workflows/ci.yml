# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: API CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
env:
  # Setting an environment variable with the value of a configuration variable
  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  APP_RUNTIME_USER: ${{ secrets.APP_RUNTIME_USER }}
  APP_RUNTIME_USER_PASSWORD: ${{ secrets.APP_RUNTIME_USER_PASSWORD }}
  POSTGRES_SHOULD_USE_SSL: ${{ vars.POSTGRES_SHOULD_USE_SSL }}
  POSTGRES_REJECT_UNAUTHORIZED: ${{ vars.POSTGRES_SHOULD_USE_SSL }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        working-directory: ./core/

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion # id to later be referenced
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "./core/package-lock.json"

      - name: Npm install & Lint
        run: |
          npm i -D
          npm run lint

      - name: Build App
        run: npm run build --if-present

      - name: Drop Db & Apply Migrations on CI DB
        run: |
          npm run typeorm:drop-schema

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Run controller tests
        run: npm run test:controller
