var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.05,1,2.427]],["body/classes/AllExceptionsFilter.html",[0,0.043,1,3.011,2,1.011,3,0.152,4,0.197,5,0.13,6,4.764,7,2.644,8,3.011,9,5.13,10,0.295,11,0.856,12,5.13,13,2.562,14,2.562,15,2.791,16,1.523,17,4.221,18,2.202,19,2.202,20,0.022,21,0.772,22,3.101,23,1.933,24,4.409,25,3.101,26,4.409,27,4.31,28,2.748,29,5.587,30,3.101,31,0.955,32,1.146,33,0.322,34,0.761,35,6.654,36,1.011,37,0.377,38,4.409,39,2.644,40,0.639,41,0.174,42,1.786,43,3.101,44,3.101,45,2.644,46,3.101,47,3.504,48,3.101,49,3.101,50,3.101,51,3.101,52,5.903,53,3.101,54,3.101,55,3.101,56,5.13,57,4.374,58,4.409,59,4.409,60,3.759,61,4.409,62,1.494,63,4.374,64,3.101,65,2.644,66,3.876,67,5.13,68,3.101,69,3.101,70,3.101,71,3.101,72,0.639,73,4.409,74,4.409,75,0.013,76,0.013]],["title/injectables/AppLoggerMiddleware.html",[77,0.571,78,2.427]],["body/injectables/AppLoggerMiddleware.html",[0,0.049,3,0.173,4,0.224,5,0.148,8,2.407,10,0.336,11,0.935,13,2.744,14,2.744,15,2.95,16,1.665,18,1.76,19,1.76,20,0.022,21,0.725,23,2.114,31,1.086,32,0.916,33,0.366,34,0.865,36,1.149,37,0.586,40,0.726,41,0.198,42,1.801,45,5.675,47,4.362,57,3.005,62,1.599,63,5.036,65,3.005,75,0.015,76,0.015,77,0.775,78,3.292,79,1.217,80,3.005,81,4.11,82,4.82,83,5.907,84,5.907,85,3.524,86,3.642,87,4.82,88,3.524,89,4.82,90,2.663,91,4.82,92,4.82,93,3.524,94,4.11,95,4.82,96,4.82,97,3.524,98,3.524,99,3.524,100,4.82,101,4.82,102,3.524,103,3.524,104,2.663,105,3.524,106,3.524,107,3.005,108,3.005]],["title/modules/AppModule.html",[109,1.465,110,2.427]],["body/modules/AppModule.html",[0,0.032,1,2.404,2,1.148,3,0.112,4,0.146,5,0.096,15,1.143,16,0.79,20,0.023,21,0.344,23,2.112,27,1.562,28,1.225,31,0.705,32,0.915,33,0.365,34,0.562,36,0.746,37,0.82,40,0.471,41,0.129,42,1.665,62,1.249,75,0.011,76,0.011,78,1.562,86,2.659,109,1.768,110,4.36,111,1.143,112,1.225,113,1.43,114,1.43,115,1.225,116,2.03,117,1.32,118,1.95,119,1.95,120,3.432,121,3.167,122,3.432,123,3.167,124,2.2,125,1.43,126,1.43,127,1.728,128,2.03,129,2.681,130,2.681,131,2.404,132,2.287,133,3.519,134,4.816,135,2.287,136,2.287,137,1.225,138,1.225,139,1.758,140,1.143,141,2.287,142,2.404,143,1.95,144,2.287,145,2.287,146,2.287,147,2.287,148,1.43,149,2.287,150,2.287,151,1.069,152,2.287,153,3,154,3.519,155,2.287,156,2.112,157,1.069,158,3.519,159,3.519,160,3.519,161,1.728,162,3,163,1.562,164,1.95,165,1.728,166,2.287,167,1.32,168,1.32,169,2.287,170,2.287,171,2.287,172,2.287,173,2.287,174,2.287,175,2.287,176,2.287,177,2.287,178,2.287,179,3.01,180,2.287,181,2.287,182,1.95,183,1.95,184,2.287,185,2.287,186,2.287,187,2.287,188,2.287,189,1.225,190,2.287,191,2.287,192,2.287,193,1.95,194,2.287,195,1.95,196,2.287,197,2.287,198,3.519,199,2.287,200,2.287,201,1.32,202,2.287,203,4.106,204,3.519,205,1.95,206,2.287,207,2.287,208,4.106,209,3,210,2.287,211,2.287,212,3.519,213,2.287,214,2.287,215,2.287,216,1.728,217,1.95,218,1.95,219,1.95,220,1.95,221,1.95,222,1.95,223,1.95,224,1.95,225,1.95,226,1.95,227,1.95,228,1.95,229,1.95,230,1.95,231,1.95,232,1.95,233,1.95,234,1.95,235,1.95]],["title/interfaces/AppRuntimeConfig.html",[236,1.661,237,1.903]],["body/interfaces/AppRuntimeConfig.html",[3,0.15,4,0.195,5,0.128,10,0.292,11,0.847,20,0.022,28,2.339,33,0.576,41,0.368,42,1.71,72,1.479,75,0.013,76,0.013,137,1.639,138,1.639,139,1.528,189,2.339,201,2.519,236,2.596,237,2.339,238,1.912,239,1.765,240,3.671,241,3.671,242,3.671,243,3.388,244,2.774,245,3.929,246,1.639,247,2.73,248,1.261,249,1.915,250,1.639,251,2.73,252,2.73,253,1.261,254,2.519,255,2.519,256,2.519,257,2.73,258,2.73,259,2.73,260,2.519,261,2.73,262,2.519,263,2.73,264,1.639,265,2.73,266,2.73,267,1.765,268,2.73,269,2.73,270,2.73,271,2.73,272,2.73,273,2.73,274,2.73,275,1.912,276,1.912,277,1.912,278,1.912,279,1.912,280,1.912,281,1.912,282,1.912,283,1.912,284,1.912,285,1.912,286,1.912,287,1.912,288,1.912,289,1.912,290,1.765,291,1.912,292,1.912,293,1.912,294,1.912,295,1.912,296,1.912,297,1.912,298,1.912,299,1.912,300,1.912,301,1.912]],["title/controllers/AuthController.html",[129,2.221,302,2.221]],["body/controllers/AuthController.html",[0,0.035,3,0.122,4,0.159,5,0.105,10,0.237,14,1.244,16,1.297,20,0.022,21,0.68,23,1.647,31,1.393,32,1.475,33,0.629,34,1.11,36,1.474,37,0.78,39,2.124,40,0.513,41,0.14,42,0.725,47,1.702,62,1.093,66,1.882,75,0.011,76,0.011,128,1.437,129,2.348,143,3.202,302,2.348,303,2.124,304,3.323,305,3.756,306,3.756,307,3.756,308,2.491,309,3.802,310,1.982,311,3.756,312,3.897,313,3.04,314,3.437,315,3.802,316,3.087,317,2.565,318,3.79,319,3.202,320,2.491,321,2.491,322,3.756,323,2.491,324,3.04,325,2.491,326,2.837,327,2.491,328,1.954,329,2.491,330,2.491,331,3.437,332,2.491,333,2.143,334,3.202,335,3.756,336,2.565,337,2.491,338,2.565,339,2.491,340,2.608,341,2.491,342,2.348,343,1.882,344,2.167,345,2.124,346,2.124,347,2.348,348,2.124,349,2.012,350,2.348,351,1.882,352,2.491,353,2.167,354,2.491,355,1.702,356,2.491,357,1.702,358,2.491,359,2.421,360,1.702,361,2.491,362,1.882,363,2.491,364,5.032,365,3.756,366,2.124,367,4.52,368,1.882,369,2.491,370,2.491,371,1.702,372,1.702,373,2.124,374,2.491,375,2.491,376,2.491,377,2.348,378,2.491,379,3.756,380,2.491,381,2.491,382,2.491,383,2.491,384,1.437,385,2.491,386,1.437,387,2.491,388,2.491,389,2.491,390,2.491,391,2.491,392,2.491,393,2.491]],["title/modules/AuthModule.html",[109,1.465,120,2.221]],["body/modules/AuthModule.html",[0,0.046,3,0.16,4,0.208,5,0.137,20,0.022,37,0.826,40,0.673,41,0.184,42,0.95,62,0.95,75,0.014,76,0.014,109,2.175,111,1.63,112,1.748,113,2.04,114,2.04,115,1.748,116,3.043,117,3.043,120,4.419,121,3.598,123,3.598,124,2.857,125,2.04,126,2.04,128,2.637,129,3.297,131,3.122,140,1.63,156,2.506,157,1.525,182,2.783,183,2.783,248,1.346,253,1.884,255,1.883,256,1.883,304,1.748,340,3.958,394,2.783,395,3.264,396,2.783,397,2.783,398,3.34,399,3.898,400,3.898,401,3.264,402,3.453,403,2.783,404,2.783,405,3.264,406,3.264,407,3.264,408,3.264,409,2.466,410,3.264,411,3.264,412,3.264,413,2.04,414,3.264,415,3.264,416,3.264]],["title/injectables/AuthProfile.html",[77,0.571,417,2.684]],["body/injectables/AuthProfile.html",[0,0.057,3,0.199,4,0.258,5,0.17,10,0.387,20,0.022,21,0.797,31,1.25,32,1.054,33,0.421,34,0.996,37,0.788,40,0.836,41,0.228,62,1.181,75,0.016,76,0.016,77,0.851,79,1.401,167,2.34,168,2.34,349,2.173,417,4.001,418,3.459,419,2.322,420,5.027,421,4.515,422,5.027,423,1.575,424,3.459,425,4.692,426,4.057,427,3.459,428,4.057,429,3.311,430,3.459,431,3.055,432,3.065,433,3.065,434,4.515,435,5.296,436,4.057,437,4.515,438,2.771,439,2.771,440,3.459,441,3.459,442,3.459,443,4.057,444,4.057,445,4.057,446,4.057]],["title/injectables/AuthService.html",[77,0.571,340,2.05]],["body/injectables/AuthService.html",[0,0.024,3,0.086,4,0.111,5,0.073,10,0.166,11,0.552,13,3.111,14,2.069,16,0.982,20,0.022,21,0.858,23,1.247,31,1.71,32,1.483,33,0.592,34,1.362,36,1.81,37,0.724,40,0.36,41,0.098,42,1.616,62,1.499,72,1.283,75,0.009,76,0.009,77,0.457,79,0.603,140,0.873,156,2.258,157,0.817,248,0.72,253,2.014,254,2.074,304,3.52,312,1.008,313,1.523,316,1.942,317,1.942,318,4.016,324,3.293,328,0.678,333,2.017,338,1.942,340,1.64,344,1.008,345,1.49,346,1.49,351,1.32,353,1.64,359,3.47,360,1.193,377,3.723,409,1.32,413,1.092,423,1.104,431,2.389,432,1.32,433,2.148,447,1.49,448,2.843,449,2.843,450,2.843,451,2.843,452,2.843,453,2.843,454,2.843,455,2.843,456,1.747,457,2.818,458,5.15,459,2.971,460,2.843,461,2.843,462,1.747,463,2.843,464,1.747,465,2.424,466,2.843,467,1.747,468,2.843,469,1.747,470,2.843,471,1.747,472,2.843,473,1.747,474,2.148,475,2.843,476,1.747,477,2.843,478,1.747,479,2.843,480,2.843,481,2.424,482,2.843,483,1.942,484,2.843,485,1.942,486,1.49,487,1.32,488,1.49,489,1.777,490,1.32,491,1.747,492,3.594,493,1.747,494,2.843,495,2.843,496,1.747,497,1.747,498,1.747,499,1.747,500,2.148,501,1.747,502,1.747,503,1.747,504,1.747,505,1.747,506,1.747,507,3.594,508,1.747,509,3.594,510,1.747,511,2.424,512,1.747,513,1.747,514,1.747,515,1.747,516,1.747,517,2.148,518,1.747,519,1.32,520,2.843,521,1.747,522,2.148,523,2.843,524,2.843,525,1.32,526,1.32,527,1.092,528,1.32,529,1.747,530,1.747,531,1.193,532,1.747,533,1.747,534,1.747]],["title/classes/AuthSuccessDto.html",[0,0.05,344,2.05]],["body/classes/AuthSuccessDto.html",[0,0.081,2,1.522,3,0.229,4,0.297,5,0.196,10,0.445,11,1.123,20,0.021,21,0.947,33,0.653,41,0.262,72,1.421,75,0.017,76,0.017,313,2.499,314,3.187,316,4.495,317,3.187,344,3.34,517,4.755,519,4.755,535,5.611,536,3.978,537,3.978,538,3.525,539,3.978,540,3.978,541,4.666,542,4.666,543,4.666]],["title/classes/AuthenticatedUserDto.html",[0,0.05,347,2.221]],["body/classes/AuthenticatedUserDto.html",[0,0.064,2,1.506,3,0.226,4,0.294,5,0.194,10,0.44,11,1.116,20,0.021,21,0.986,33,0.68,34,1.412,41,0.26,72,1.453,75,0.017,76,0.017,328,2.432,333,2.164,347,3.596,384,3.614,386,3.614,544,5.752,545,2.887,546,4.618,547,4.618,548,3.938,549,4.618]],["title/classes/BaseEntity.html",[0,0.05,550,2.427]],["body/classes/BaseEntity.html",[0,0.058,2,1.364,3,0.205,4,0.266,5,0.176,10,0.398,11,1.048,20,0.022,21,0.9,33,0.679,34,1.552,37,0.656,41,0.235,72,1.113,75,0.016,76,0.016,151,1.954,310,2.623,328,2.322,550,3.689,551,3.565,552,5.1,553,5.1,554,6.323,555,4.181,556,6.323,557,6.323,558,5.401,559,4.181,560,4.181,561,4.181,562,4.181,563,4.181,564,3.387,565,5.401,566,4.181,567,5.401,568,2.239,569,4.181,570,4.605]],["title/modules/CommunicationModule.html",[109,1.465,121,2.05]],["body/modules/CommunicationModule.html",[0,0.064,3,0.226,4,0.293,5,0.193,20,0.022,37,0.698,40,0.949,41,0.259,75,0.017,76,0.017,109,2.579,111,2.299,112,2.465,113,2.877,114,2.877,115,2.465,116,3.609,117,3.609,121,4.021,124,3.588,125,2.877,126,2.877,459,4.171,486,3.924,571,3.924,572,3.924,573,3.924,574,4.603]],["title/classes/CreateUserDto.html",[0,0.05,575,2.221]],["body/classes/CreateUserDto.html",[0,0.083,2,1.592,3,0.239,4,0.311,5,0.205,10,0.465,11,1.155,20,0.022,21,0.734,33,0.507,37,0.723,41,0.275,72,1.227,75,0.018,76,0.018,151,2.282,310,2.141,333,2.218,545,3.052,564,3.188,575,3.721,576,5.075,577,4.882,578,4.162,579,4.497,580,3.052]],["title/classes/DatabaseLogger.html",[0,0.05,148,2.221]],["body/classes/DatabaseLogger.html",[0,0.033,2,0.776,3,0.259,4,0.151,5,0.1,8,2.477,10,0.227,11,0.704,13,3.059,14,2.785,15,2.643,16,1.252,17,1.797,18,1.188,19,1.188,20,0.022,21,0.94,23,1.59,27,2.477,31,2.126,32,1.553,33,0.636,34,1.467,36,1.891,37,0.597,40,0.49,41,0.134,62,1.54,72,1.422,75,0.011,76,0.011,86,3.997,104,3.997,107,2.028,108,3.747,140,1.188,148,2.267,156,2.32,157,1.112,237,2.986,244,2.195,246,1.274,336,3.808,362,4.516,423,0.923,568,1.274,581,2.028,582,4.394,583,3.626,584,3.092,585,3.092,586,3.626,587,3.626,588,3.626,589,2.267,590,3.626,591,3.626,592,2.379,593,3.626,594,4.915,595,2.379,596,4.191,597,3.626,598,2.379,599,3.626,600,2.379,601,4.191,602,3.626,603,2.379,604,3.626,605,2.379,606,3.092,607,3.626,608,2.379,609,3.626,610,2.379,611,2.379,612,2.379,613,4.915,614,2.379,615,2.379,616,4.394,617,2.379,618,2.379,619,2.379,620,2.028,621,2.379]],["title/injectables/EmailService.html",[77,0.571,459,2.05]],["body/injectables/EmailService.html",[0,0.043,3,0.151,4,0.196,5,0.129,10,0.293,11,0.851,13,3.057,14,3.057,15,2.782,16,1.515,17,2.327,18,1.538,19,1.538,20,0.022,21,0.886,23,2.241,31,1.575,32,1.328,33,0.635,34,1.255,36,1.431,37,0.716,40,0.635,41,0.173,42,1.488,62,0.897,72,1.261,75,0.013,76,0.013,77,0.705,79,1.064,140,1.538,156,2.582,157,1.44,250,1.65,264,3.278,267,1.777,304,2.737,309,3.315,324,2.35,333,1.515,377,1.925,423,1.196,459,2.531,487,4.758,488,2.626,511,3.741,589,2.743,601,2.626,620,2.626,622,2.626,623,4.388,624,5.111,625,4.388,626,4.388,627,3.08,628,5.887,629,3.08,630,5.887,631,3.08,632,4.388,633,3.08,634,3.08,635,2.626,636,3.08,637,3.08,638,3.08,639,3.08,640,3.08,641,5.57,642,3.08,643,2.626,644,3.08,645,3.08,646,3.08,647,3.08,648,3.08,649,4.388,650,3.08,651,2.626,652,3.08,653,3.08,654,3.08]],["title/controllers/HealthController.html",[130,2.221,302,2.221]],["body/controllers/HealthController.html",[0,0.058,3,0.204,4,0.265,5,0.175,10,0.397,13,2.692,16,1.862,20,0.022,21,0.811,36,1.758,37,0.768,40,0.859,41,0.234,62,1.569,66,3.149,75,0.016,76,0.016,128,2.405,130,3.369,163,2.847,244,2.082,302,3.369,310,2.364,342,3.369,343,3.149,366,3.554,368,3.149,371,2.847,372,3.681,423,1.618,655,3.554,656,5.385,657,6.315,658,4.168,659,4.168,660,4.168,661,4.168,662,5.093,663,5.973,664,5.973,665,4.168,666,3.554,667,4.168,668,4.168,669,4.168]],["title/modules/HealthModule.html",[109,1.465,122,2.221]],["body/modules/HealthModule.html",[0,0.069,3,0.242,4,0.314,5,0.207,18,2.465,20,0.022,37,0.784,40,1.017,41,0.278,75,0.018,76,0.018,109,2.47,111,2.465,116,2.847,117,2.847,122,3.745,128,3.457,130,4.033,131,3.37,162,5.108,163,3.37,670,4.935,671,4.935]],["title/injectables/JwtAuthGuard.html",[77,0.571,142,2.427]],["body/injectables/JwtAuthGuard.html",[0,0.055,3,0.193,4,0.251,5,0.165,10,0.375,16,1.795,20,0.022,21,0.781,31,1.601,32,1.35,33,0.539,34,1.275,36,1.285,37,0.781,40,0.812,41,0.222,42,1.147,62,1.513,75,0.016,76,0.016,77,0.835,79,1.361,142,3.549,161,2.977,179,2.463,245,3.248,324,2.783,343,2.977,373,3.359,419,1.728,423,1.53,672,3.97,673,3.359,674,5.196,675,3.94,676,6.597,677,3.94,678,5.196,679,6.18,680,3.94,681,3.94,682,5.813,683,2.977,684,2.977,685,2.11,686,3.359,687,3.94,688,2.691,689,4.43,690,3.94,691,3.94,692,3.94,693,3.94]],["title/interfaces/JwtConfig.html",[236,1.661,253,1.465]],["body/interfaces/JwtConfig.html",[3,0.137,4,0.178,5,0.117,10,0.267,11,0.794,20,0.022,28,2.192,33,0.675,41,0.36,42,1.65,72,1.506,75,0.012,76,0.012,137,1.498,138,1.498,139,1.397,189,2.192,201,2.361,236,2.489,237,1.498,238,1.748,239,1.614,240,2.558,241,2.558,242,2.558,243,2.361,244,2.044,245,3.543,246,1.498,247,2.558,248,1.153,249,1.795,250,1.498,251,2.558,252,2.558,253,1.687,254,3.27,255,3.27,256,3.27,257,3.543,258,3.543,259,3.543,260,3.27,261,3.543,262,3.27,263,3.543,264,1.498,265,2.558,266,2.558,267,1.614,268,2.558,269,2.558,270,2.558,271,2.558,272,2.558,273,2.558,274,2.558,275,1.748,276,1.748,277,1.748,278,1.748,279,1.748,280,1.748,281,1.748,282,1.748,283,1.748,284,1.748,285,1.748,286,1.748,287,1.748,288,1.748,289,1.748,290,1.614,291,1.748,292,1.748,293,1.748,294,1.748,295,1.748,296,1.748,297,1.748,298,1.748,299,1.748,300,1.748,301,1.748]],["title/injectables/JwtMagicLinkGuard.html",[77,0.571,355,2.427]],["body/injectables/JwtMagicLinkGuard.html",[0,0.071,3,0.248,4,0.322,5,0.213,20,0.022,37,0.793,40,1.043,41,0.285,75,0.018,76,0.018,77,0.978,79,1.749,353,2.921,355,4.156,398,2.712,402,3.825,403,4.316,419,2.22,672,3.458,684,3.825,685,2.712,694,4.316,695,5.062]],["title/injectables/JwtMagicLinkStrategy.html",[77,0.571,398,1.903]],["body/injectables/JwtMagicLinkStrategy.html",[0,0.053,3,0.185,4,0.24,5,0.158,10,0.359,16,1.742,20,0.022,21,0.758,31,1.554,32,1.311,33,0.523,34,1.238,36,1.229,37,0.792,40,0.776,41,0.284,42,1.468,62,1.097,75,0.015,76,0.015,77,0.81,79,1.301,140,1.881,156,2.775,157,1.761,248,1.553,249,2.211,253,1.553,262,2.909,304,3.044,324,2.701,328,1.462,333,1.301,347,2.355,348,3.212,349,2.017,384,2.173,386,2.173,398,3.251,413,2.355,419,1.652,423,1.462,483,3.444,500,2.846,531,2.573,589,3.152,685,2.017,688,2.573,696,3.882,697,2.846,698,3.767,699,3.81,700,3.767,701,2.846,702,2.846,703,3.444,704,2.573,705,2.846,706,2.846,707,3.212,708,2.846,709,2.573,710,2.846,711,3.212,712,3.767,713,3.767,714,3.767]],["title/injectables/JwtRefreshGuard.html",[77,0.571,357,2.427]],["body/injectables/JwtRefreshGuard.html",[0,0.071,3,0.249,4,0.323,5,0.213,20,0.022,37,0.794,40,1.047,41,0.286,75,0.018,76,0.018,77,0.98,79,1.755,357,4.165,402,3.839,404,4.332,419,2.228,672,3.471,684,3.839,685,2.722,715,4.332,716,3.471,717,5.081]],["title/injectables/JwtRefreshStrategy.html",[77,0.571,399,2.221]],["body/injectables/JwtRefreshStrategy.html",[0,0.054,3,0.189,4,0.246,5,0.162,10,0.368,16,1.771,20,0.022,21,0.771,31,1.58,32,1.333,33,0.532,34,1.259,36,1.26,37,0.797,40,0.796,41,0.288,42,1.493,62,1.124,75,0.015,76,0.015,77,0.824,79,1.334,140,1.929,156,2.798,157,1.805,248,1.592,249,2.249,253,1.592,260,2.958,326,2.918,328,1.499,349,2.069,350,3.598,351,2.918,399,3.205,413,2.414,419,1.694,423,1.499,483,3.502,531,2.638,589,3.205,685,2.069,688,2.638,696,3.931,699,3.874,701,2.918,702,2.918,703,3.502,704,2.638,705,2.918,706,2.918,707,3.293,708,2.918,709,2.638,710,2.918,711,3.293,716,3.502,718,2.918,719,3.862,720,3.862]],["title/injectables/JwtStrategy.html",[77,0.571,400,2.221]],["body/injectables/JwtStrategy.html",[0,0.05,3,0.177,4,0.23,5,0.152,10,0.345,13,1.807,14,1.807,16,1.695,20,0.022,21,0.738,31,1.512,32,1.275,33,0.509,34,1.205,36,1.18,37,0.825,40,0.745,41,0.203,42,1.429,62,1.053,75,0.015,76,0.015,77,0.789,79,1.249,140,1.807,156,2.822,157,1.691,167,2.087,168,2.087,248,1.491,249,1.586,253,2.023,318,3.067,349,1.938,400,3.067,413,2.261,419,1.586,423,1.905,425,4.078,429,3.732,430,3.084,431,3.601,432,2.733,433,2.733,438,2.471,439,3.351,483,3.351,531,2.471,589,2.261,685,1.938,688,2.471,699,3.707,701,2.733,702,2.733,703,2.471,704,2.471,705,2.733,706,2.733,708,2.733,709,2.471,710,2.733,721,3.084,722,4.748,723,3.617,724,3.617,725,3.617,726,3.617,727,3.617,728,3.617,729,3.617]],["title/classes/LocalUserDto.html",[0,0.05,429,2.221]],["body/classes/LocalUserDto.html",[0,0.066,2,1.123,3,0.169,4,0.219,5,0.145,10,0.328,11,0.921,20,0.022,21,1.011,32,1.411,33,0.697,37,0.66,41,0.194,72,1.46,75,0.014,76,0.014,151,1.61,310,2.946,333,1.875,429,2.966,465,4.628,489,3.393,490,2.602,525,4.101,526,4.101,527,3.393,528,4.101,545,2.153,564,3.826,578,2.937,580,2.153,730,5.797,731,5.429,732,5.429,733,3.444,734,3.444,735,3.444,736,3.444,737,3.444,738,3.444,739,3.444,740,3.444,741,3.444,742,4.046]],["title/interfaces/PgsqlDbConfig.html",[138,1.903,236,1.661]],["body/interfaces/PgsqlDbConfig.html",[3,0.139,4,0.181,5,0.119,10,0.27,11,0.803,20,0.022,28,3.054,33,0.666,41,0.361,42,1.66,72,1.482,75,0.012,76,0.012,137,1.52,138,2.215,139,1.417,189,3.054,201,3.289,236,2.507,237,1.52,238,1.774,239,1.637,240,2.585,241,2.585,242,2.585,243,2.386,244,2.679,245,4.219,246,1.52,247,2.585,248,1.17,249,1.814,250,1.52,251,2.585,252,2.585,253,1.17,254,2.386,255,2.386,256,2.386,257,2.585,258,2.585,259,2.585,260,2.386,261,2.585,262,2.386,263,2.585,264,1.52,265,2.585,266,2.585,267,1.637,268,2.585,269,3.564,270,3.564,271,3.564,272,3.564,273,3.564,274,3.564,275,1.774,276,1.774,277,1.774,278,1.774,279,1.774,280,1.774,281,1.774,282,1.774,283,1.774,284,1.774,285,1.774,286,1.774,287,1.774,288,1.774,289,1.774,290,1.637,291,1.774,292,1.774,293,1.774,294,1.774,295,1.774,296,1.774,297,1.774,298,1.774,299,1.774,300,1.774,301,1.774]],["title/classes/RefreshTokenPayload.html",[0,0.05,485,2.427]],["body/classes/RefreshTokenPayload.html",[0,0.058,2,1.359,3,0.204,4,0.265,5,0.175,10,0.397,11,1.046,20,0.022,21,0.95,33,0.655,34,1.696,37,0.507,41,0.234,72,1.38,75,0.016,76,0.016,151,1.948,244,2.692,310,2.769,312,3.773,485,3.681,522,4.513,564,3.739,743,4.941,744,3.149,745,5.093,746,5.093,747,5.093,748,4.168,749,4.168,750,4.168,751,4.168]],["title/classes/RefreshUserDto.html",[0,0.05,350,2.221]],["body/classes/RefreshUserDto.html",[0,0.072,2,1.689,3,0.254,4,0.329,5,0.217,10,0.493,11,1.197,20,0.021,21,0.779,33,0.537,41,0.291,72,1.271,75,0.019,76,0.019,328,2.557,350,3.855,545,3.236,548,4.414,743,4.659]],["title/classes/RequestMagicLinkDto.html",[0,0.05,331,2.427]],["body/classes/RequestMagicLinkDto.html",[0,0.078,2,1.443,3,0.217,4,0.282,5,0.186,10,0.422,11,1.087,20,0.022,21,0.665,33,0.459,37,0.538,41,0.249,47,3.824,72,1.154,75,0.017,76,0.017,310,1.94,313,2.37,314,4.41,318,3.5,331,3.824,333,2.301,338,3.824,353,3.725,474,4.23,538,4.23,579,4.23,580,2.766,752,4.774,753,3.772,754,4.774,755,5.599,756,5.599,757,5.599,758,4.424,759,4.424,760,4.774]],["title/interfaces/SendGridConfig.html",[236,1.661,264,1.903]],["body/interfaces/SendGridConfig.html",[3,0.152,4,0.197,5,0.13,10,0.295,11,0.854,20,0.022,28,2.358,33,0.612,41,0.369,42,1.717,72,1.481,75,0.013,76,0.013,137,1.657,138,1.657,139,1.545,189,2.358,201,2.539,236,2.609,237,1.657,238,1.934,239,1.785,240,2.752,241,2.752,242,2.752,243,2.539,244,2.199,245,3.687,246,1.657,247,2.752,248,1.276,249,1.93,250,1.657,251,2.752,252,2.752,253,1.276,254,2.539,255,2.539,256,2.539,257,2.752,258,2.752,259,2.752,260,2.539,261,2.752,262,2.539,263,2.752,264,2.358,265,3.687,266,3.687,267,1.785,268,3.687,269,2.752,270,2.752,271,2.752,272,2.752,273,2.752,274,2.752,275,1.934,276,1.934,277,1.934,278,1.934,279,1.934,280,1.934,281,1.934,282,1.934,283,1.934,284,1.934,285,1.934,286,1.934,287,1.934,288,1.934,289,1.934,290,1.785,291,1.934,292,1.934,293,1.934,294,1.934,295,1.934,296,1.934,297,1.934,298,1.934,299,1.934,300,1.934,301,1.934,309,3.326]],["title/classes/Somename1693507040444.html",[0,0.05,761,2.684]],["body/classes/Somename1693507040444.html",[0,0.051,2,1.189,3,0.179,4,0.232,5,0.153,8,3.369,10,0.347,11,0.957,16,1.704,18,2.992,19,1.821,20,0.022,21,0.841,31,1.52,32,1.627,33,0.58,34,1.211,36,1.609,37,0.443,41,0.205,72,0.751,75,0.015,76,0.015,267,2.104,304,3.455,324,3.209,328,1.915,333,1.259,342,4.033,377,3.084,384,2.104,386,2.104,552,3.109,553,3.109,568,1.953,761,4.526,762,5.108,763,3.109,764,5.591,765,4.933,766,4.206,767,3.646,768,4.933,769,6.8,770,3.646,771,4.933,772,3.646,773,3.646,774,3.727,775,4.933,776,3.109,777,5.991,778,3.646,779,4.933,780,4.206,781,5.591,782,5.591,783,3.646,784,3.646,785,3.646,786,3.646]],["title/classes/TokenPayloadDto.html",[0,0.05,431,2.05]],["body/classes/TokenPayloadDto.html",[0,0.073,2,1.042,3,0.157,4,0.203,5,0.134,10,0.304,11,0.874,20,0.022,21,1.007,32,1.355,33,0.695,34,1.52,37,0.547,41,0.18,72,1.446,75,0.014,76,0.014,151,1.493,244,2.249,310,2.937,312,3.267,313,1.711,315,3.402,328,1.748,333,1.801,431,2.598,489,3.26,490,2.414,522,3.94,525,3.94,526,3.94,527,3.26,528,3.94,564,3.831,744,2.414,745,4.446,746,4.446,747,4.446,787,5.773,788,4.503,789,3.839,790,3.195,791,3.195,792,3.195,793,3.195,794,3.195,795,3.195,796,3.195,797,3.195,798,3.195,799,3.195]],["title/classes/UserDto.html",[0,0.05,359,1.903]],["body/classes/UserDto.html",[0,0.076,2,1.38,3,0.207,4,0.269,5,0.178,10,0.403,11,1.056,20,0.022,21,0.955,33,0.659,37,0.662,41,0.238,72,1.428,75,0.016,76,0.016,151,1.978,310,2.786,328,2.336,333,2.078,359,2.916,384,3.471,386,3.471,564,3.52,579,4.113,580,2.646,742,4.641,760,5.416,800,3.609,801,4.233,802,4.233,803,5.443,804,4.233,805,4.233,806,4.233,807,4.233]],["title/entities/UserEntity.html",[808,2.427,809,1.903]],["body/entities/UserEntity.html",[0,0.059,3,0.208,4,0.27,5,0.178,10,0.405,11,1.058,20,0.022,21,0.906,33,0.625,37,0.732,41,0.239,72,1.387,75,0.016,76,0.016,151,1.985,179,3.41,310,2.643,333,2.081,384,3.476,386,3.476,419,1.862,550,3.725,564,3.406,568,2.274,808,3.725,809,2.921,810,3.208,811,3.62,812,4.246,813,4.246,814,5.454,815,5.454,816,4.246,817,4.246,818,4.246,819,6.359,820,5.454]],["title/modules/UserModule.html",[109,1.465,123,2.05]],["body/modules/UserModule.html",[0,0.057,3,0.2,4,0.26,5,0.171,20,0.022,37,0.81,40,0.841,41,0.23,75,0.016,76,0.016,109,2.438,111,2.039,112,2.186,113,2.551,114,2.551,115,2.186,116,3.411,117,3.411,123,4.077,124,3.323,125,2.551,126,2.551,131,2.787,164,3.48,165,3.083,457,4.102,809,2.186,821,3.48,822,3.48,823,3.48,824,4.164,825,3.843,826,4.081,827,2.787,828,4.081,829,3.48,830,4.081,831,4.081]],["title/injectables/UserProfile.html",[77,0.571,824,2.221]],["body/injectables/UserProfile.html",[0,0.056,3,0.198,4,0.257,5,0.17,10,0.385,20,0.022,21,0.795,31,1.246,32,1.051,33,0.42,34,0.993,37,0.808,40,0.834,41,0.227,62,1.178,75,0.016,76,0.016,77,0.85,79,1.397,167,2.334,168,2.334,349,2.167,359,3.154,360,2.763,419,2.318,420,5.02,421,4.507,422,5.02,423,1.57,424,3.449,425,4.623,427,3.449,434,3.449,437,4.507,438,2.763,439,2.763,440,3.449,441,3.449,442,3.449,575,3.681,809,3.47,824,3.304,827,2.763,832,3.449,833,4.045,834,4.045,835,3.449,836,6.243]],["title/injectables/UserRepository.html",[77,0.571,825,2.05]],["body/injectables/UserRepository.html",[0,0.065,3,0.229,4,0.297,5,0.196,20,0.022,21,0.702,31,1.438,32,1.213,33,0.484,34,1.145,37,0.765,40,0.961,41,0.262,75,0.017,76,0.017,77,0.93,79,1.611,419,2.539,423,1.811,568,2.499,809,2.499,825,3.34,827,3.187,837,3.978,838,4.755,839,5.789,840,6.766,841,4.666,842,5.789,843,4.666,844,4.666,845,4.666]],["title/injectables/UserService.html",[77,0.571,457,2.05]],["body/injectables/UserService.html",[0,0.044,3,0.155,4,0.201,5,0.133,10,0.302,13,2.235,14,1.581,16,1.545,20,0.022,21,0.848,31,1.737,32,1.466,33,0.585,34,1.384,36,1.692,37,0.771,40,0.652,41,0.178,42,1.302,62,1.511,72,1.272,75,0.014,76,0.014,77,0.719,79,1.093,167,1.826,168,1.826,304,3.531,324,3.307,328,2.014,333,1.792,349,1.696,359,3.02,360,2.162,377,3.968,423,1.737,425,3.851,438,2.162,439,3.056,457,2.581,575,3.719,722,4.424,809,3.58,825,3.253,827,2.162,829,2.699,835,2.699,838,3.38,846,2.699,847,4.474,848,4.474,849,4.474,850,3.166,851,3.166,852,4.474,853,3.166,854,3.166,855,4.474,856,3.166,857,4.474,858,3.166,859,4.474,860,5.188,861,3.166,862,3.166]],["title/coverage.html",[863,4.133]],["body/coverage.html",[0,0.09,1,1.554,5,0.096,6,1.94,7,1.94,15,1.137,20,0.022,23,0.998,33,0.236,75,0.011,76,0.011,77,1.038,78,1.554,80,1.94,115,1.219,127,1.72,129,1.423,130,1.423,137,1.219,138,1.219,139,1.137,142,1.554,148,1.423,156,0.998,216,1.72,236,2.245,237,1.219,239,3.488,246,1.219,248,0.938,250,1.219,253,0.938,264,1.219,302,2.191,303,1.94,312,1.313,331,1.554,340,1.313,342,1.423,344,1.313,347,1.423,350,1.423,353,2.022,355,1.554,357,1.554,359,1.219,398,1.878,399,1.423,400,1.423,417,1.72,418,1.94,429,1.423,431,1.313,447,1.94,457,1.313,459,1.313,485,1.554,527,1.423,535,1.94,536,1.94,544,1.94,545,3.002,550,1.554,551,1.94,575,1.423,576,1.94,581,1.94,622,1.94,655,1.94,672,2.92,673,1.94,683,1.72,694,1.94,696,3.28,697,2.648,715,1.94,716,1.554,718,2.648,721,1.94,730,1.94,743,2.648,744,2.648,752,1.94,753,1.94,761,1.72,762,1.94,763,1.94,774,1.72,787,1.94,800,1.94,808,1.554,809,1.219,811,1.94,824,1.423,825,1.313,832,1.94,837,1.94,846,1.94,863,1.94,864,2.276,865,2.276,866,1.94,867,7.289,868,5.187,869,3.505,870,3.505,871,5.187,872,6.857,873,6.969,874,5.187,875,2.276,876,2.276,877,2.989,878,1.94,879,2.989,880,2.276,881,2.276,882,2.276,883,2.276,884,2.276,885,2.276,886,5.479,887,2.276,888,4.422,889,1.94,890,1.94,891,1.72,892,1.72,893,1.94,894,1.94,895,3.645,896,1.94,897,3.645,898,1.94,899,1.94,900,1.94,901,2.276]],["title/dependencies.html",[112,2.289,902,2.242]],["body/dependencies.html",[0,0.074,5,0.171,20,0.022,40,0.839,75,0.016,76,0.016,90,3.074,112,2.179,151,1.902,157,1.902,161,3.074,163,2.779,165,3.074,167,2.347,168,2.347,249,1.784,368,3.074,409,3.074,568,2.179,580,2.544,635,3.469,685,2.179,686,3.469,704,2.779,776,3.469,903,4.069,904,4.069,905,4.069,906,4.069,907,4.069,908,3.469,909,4.069,910,4.069,911,5.306,912,4.069,913,6.258,914,4.069,915,4.069,916,4.069,917,4.069,918,4.069,919,4.069,920,4.069,921,4.069,922,4.069,923,4.069,924,4.069,925,4.069,926,4.069,927,4.069,928,5.034,929,4.069,930,4.069,931,4.069,932,4.069,933,4.069,934,4.069,935,4.069,936,4.069,937,4.069,938,4.069,939,4.069,940,4.069,941,4.069,942,4.069]],["title/miscellaneous/enumerations.html",[943,1.712,944,3.643]],["body/miscellaneous/enumerations.html",[10,0.49,19,3.398,20,0.021,75,0.019,76,0.019,290,2.964,487,4.638,489,3.838,943,2.964,944,4.381,945,5.138,946,5.138,947,5.138,948,5.138,949,5.138,950,5.138,951,5.138,952,5.138,953,5.138,954,5.138,955,5.138]],["title/miscellaneous/functions.html",[943,1.712,956,3.643]],["body/miscellaneous/functions.html",[10,0.527,20,0.019,75,0.019,76,0.019,115,3.627,893,4.718,943,3.192,956,4.718,957,5.533]],["title/index.html",[10,0.283,958,2.968,959,2.968]],["body/index.html",[0,0.04,3,0.139,5,0.25,11,0.339,15,0.872,18,2.275,19,0.872,20,0.018,23,1.245,36,0.569,41,0.098,72,0.74,75,0.011,76,0.009,81,4.574,90,1.318,94,2.421,104,3.127,139,0.872,148,1.091,179,1.775,189,0.935,193,1.488,195,3.884,203,1.488,243,1.007,249,1.815,312,2.387,313,0.935,314,2.827,315,1.318,316,3.111,317,2.453,318,2.245,319,1.488,328,0.677,333,0.981,334,4.388,336,1.94,338,1.192,344,1.007,353,1.007,362,1.318,371,2.827,372,1.192,474,1.318,481,1.488,517,2.713,519,2.146,537,1.488,538,1.318,539,3.528,540,3.062,568,1.923,570,1.488,584,1.488,585,1.488,606,1.488,643,1.488,651,1.488,656,2.421,662,3.528,666,1.488,754,2.421,766,1.488,774,1.318,780,1.488,789,2.421,808,1.192,810,1.318,838,1.318,866,1.488,891,1.318,892,1.318,894,1.488,902,3.127,928,1.488,960,2.84,961,1.745,962,1.745,963,1.745,964,1.745,965,1.745,966,3.591,967,2.84,968,2.84,969,1.745,970,1.745,971,2.84,972,1.745,973,1.488,974,3.591,975,1.745,976,2.84,977,2.84,978,3.591,979,1.745,980,2.84,981,5.147,982,4.138,983,2.84,984,1.745,985,1.745,986,1.745,987,1.745,988,1.745,989,2.84,990,3.591,991,1.745,992,1.745,993,1.745,994,2.84,995,5.147,996,1.745,997,1.745,998,1.745,999,1.745,1000,2.84,1001,1.745,1002,2.84,1003,1.745,1004,4.138,1005,1.745,1006,1.745,1007,5.147,1008,2.84,1009,2.84,1010,2.84,1011,2.84,1012,5.548,1013,4.138,1014,1.745,1015,1.745,1016,1.745,1017,1.745,1018,4.555,1019,2.84,1020,1.745,1021,1.745,1022,1.745,1023,1.745,1024,1.745,1025,1.745,1026,2.84,1027,1.745,1028,1.745,1029,1.745,1030,1.745,1031,1.745,1032,1.745,1033,1.745,1034,1.745,1035,1.745,1036,1.745,1037,1.745,1038,2.84,1039,1.745,1040,1.745,1041,3.591,1042,1.745,1043,1.745,1044,1.745,1045,1.745,1046,1.745,1047,2.84,1048,1.745,1049,2.84,1050,1.745,1051,2.84,1052,3.591,1053,1.745,1054,1.745,1055,4.138,1056,1.745,1057,1.745,1058,1.745,1059,2.84,1060,2.84,1061,1.745,1062,2.84,1063,2.84,1064,1.745,1065,2.84,1066,3.591,1067,1.745,1068,1.745,1069,1.745,1070,1.745,1071,1.745,1072,1.745,1073,1.745,1074,2.84,1075,1.745,1076,1.745,1077,1.745,1078,1.745,1079,1.745,1080,2.84,1081,4.883,1082,1.745,1083,1.745,1084,1.745,1085,2.84,1086,1.745,1087,1.745,1088,3.591,1089,3.591,1090,1.745,1091,1.745,1092,1.488,1093,1.745,1094,1.745,1095,1.745,1096,1.745,1097,1.745,1098,1.745,1099,1.745,1100,1.745,1101,2.84,1102,2.84,1103,1.745,1104,1.745,1105,1.745,1106,1.745,1107,1.745,1108,1.745,1109,1.745,1110,1.745,1111,1.745,1112,1.488,1113,1.745,1114,1.745,1115,1.745,1116,2.84,1117,1.745,1118,1.745,1119,3.591,1120,1.745,1121,1.745,1122,1.745,1123,1.745,1124,1.745,1125,1.745,1126,1.745,1127,1.745,1128,1.745,1129,2.84,1130,1.745,1131,1.745,1132,1.745,1133,1.745,1134,1.745,1135,1.745,1136,1.745,1137,2.84,1138,1.745,1139,1.745,1140,1.745,1141,1.745,1142,1.745,1143,1.745,1144,2.84,1145,1.745,1146,1.745,1147,1.745,1148,1.745,1149,1.745,1150,1.745,1151,1.745,1152,1.745,1153,1.745,1154,1.745,1155,1.745,1156,1.745,1157,1.745,1158,3.591,1159,2.84,1160,1.745,1161,1.745,1162,1.745,1163,1.745,1164,1.745,1165,1.745,1166,3.591,1167,1.745,1168,1.745,1169,1.745,1170,1.745,1171,1.745,1172,1.745,1173,1.745,1174,4.138,1175,2.84,1176,1.745,1177,1.745,1178,2.84,1179,2.84,1180,2.84,1181,1.745,1182,1.745,1183,1.745,1184,2.84,1185,1.745,1186,1.745,1187,1.745,1188,1.745,1189,1.745,1190,1.745,1191,1.745,1192,1.745,1193,1.745,1194,1.745,1195,1.745,1196,1.745,1197,1.745,1198,1.745,1199,1.745,1200,1.745,1201,1.745,1202,1.745,1203,1.745,1204,1.745,1205,1.745,1206,1.745,1207,1.745,1208,1.745,1209,1.745,1210,1.745,1211,1.745,1212,1.745,1213,1.745,1214,1.745,1215,1.745,1216,1.745,1217,2.84,1218,2.421]],["title/modules.html",[111,2.421]],["body/modules.html",[20,0.019,75,0.019,76,0.019,110,3.536,111,2.586,120,3.236,121,2.987,122,3.236,123,2.987,1092,5.814,1219,6.819,1220,6.819,1221,6.966,1222,5.177,1223,5.177]],["title/overview.html",[1224,4.133]],["body/overview.html",[2,1.192,20,0.022,75,0.015,76,0.015,79,1.263,109,1.507,110,4.698,111,1.826,112,1.958,113,2.285,114,2.285,115,1.958,116,2.109,117,2.109,118,3.117,119,3.117,120,4.463,121,3.808,122,3.5,123,4.004,124,3.089,125,2.285,126,2.285,128,2.109,238,2.285,340,3.808,372,2.497,394,3.117,396,3.117,397,3.117,398,2.999,399,3.5,400,3.5,457,3.808,459,3.808,571,3.117,572,3.117,573,3.117,810,2.762,821,3.117,822,3.117,823,3.117,824,3.5,825,3.23,1224,3.117,1225,3.656,1226,3.656,1227,4.942,1228,3.656]],["title/properties.html",[11,0.829,902,2.242]],["body/properties.html",[11,1.061,20,0.022,75,0.019,76,0.019,313,2.928,371,3.734,1229,5.467,1230,5.467,1231,5.467,1232,5.467]],["title/miscellaneous/variables.html",[943,1.712,1233,3.643]],["body/miscellaneous/variables.html",[3,0.136,10,0.162,15,1.388,18,3.325,19,3.266,20,0.022,23,2.115,27,2.782,28,0.91,32,0.442,33,0.613,42,1.186,60,1.449,62,1.186,72,1.094,75,0.008,76,0.008,127,1.284,137,1.489,139,1.388,153,1.449,156,1.546,179,2.808,189,0.91,201,0.98,205,3.007,208,3.007,209,1.449,216,2.1,217,1.449,218,1.449,219,1.449,220,1.449,221,1.449,222,1.449,223,1.449,224,1.449,225,1.449,226,1.449,227,1.449,228,1.449,229,1.449,230,1.449,231,1.449,232,1.449,233,1.449,234,1.449,235,1.449,239,0.98,240,1.062,241,1.062,242,1.062,243,0.98,246,1.489,247,1.737,248,1.146,249,1.786,250,1.489,251,1.737,252,1.737,254,0.98,255,0.98,256,0.98,257,1.062,258,1.062,259,1.062,260,0.98,261,1.062,262,0.98,263,1.062,265,1.062,266,1.062,268,1.062,269,1.062,270,1.062,271,1.062,272,1.062,273,1.062,274,1.062,275,1.062,276,1.062,277,1.062,278,1.062,279,1.062,280,1.062,281,1.062,282,1.062,283,1.062,284,1.062,285,1.062,286,1.062,287,1.062,288,1.062,289,1.062,290,0.98,291,1.062,292,1.062,293,1.062,294,1.062,295,1.062,296,1.062,297,1.062,298,1.062,299,1.062,300,1.062,301,1.062,326,1.284,336,1.898,342,1.737,398,1.489,489,1.062,500,1.284,527,2.808,596,3.007,683,2.1,689,1.449,696,1.898,697,2.1,703,1.898,709,2.409,716,1.898,718,2.1,877,1.449,878,2.37,879,1.449,888,1.449,889,2.37,890,3.007,891,2.664,892,2.664,895,3.007,896,2.37,897,4.686,898,2.37,899,2.37,900,2.37,908,4.112,943,0.98,973,2.37,1112,2.37,1218,3.007,1233,1.449,1234,4.492,1235,4.492,1236,3.526,1237,1.699,1238,2.779,1239,2.779,1240,2.779,1241,1.699,1242,2.779,1243,1.699,1244,2.779,1245,1.699,1246,1.699,1247,1.699,1248,1.699,1249,4.074,1250,2.779,1251,2.779,1252,2.779,1253,2.779,1254,2.779,1255,2.779,1256,1.699,1257,1.699,1258,1.699,1259,1.699,1260,1.699,1261,1.699,1262,1.699,1263,1.699,1264,1.699,1265,1.699,1266,1.699,1267,1.699,1268,1.699,1269,1.699,1270,1.699,1271,1.699,1272,1.699,1273,2.779,1274,1.699,1275,1.699,1276,1.699,1277,1.699,1278,2.779,1279,2.779,1280,2.779,1281,1.699,1282,2.779,1283,2.779,1284,1.699,1285,1.699,1286,1.699,1287,1.699,1288,3.526,1289,3.526,1290,3.526,1291,3.526,1292,4.822,1293,3.526,1294,3.526,1295,3.526,1296,3.526,1297,3.526,1298,3.526,1299,3.526,1300,3.526,1301,3.526,1302,1.699,1303,3.526,1304,3.526,1305,3.526,1306,3.526,1307,3.526,1308,3.526,1309,1.699,1310,1.699,1311,1.699,1312,2.779,1313,1.699,1314,1.699]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"modules/CommunicationModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["0.0.1",{"_index":1229,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["0.4.6",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"index.html":{},"overview.html":{}}}],["1.9.4",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["1/11",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1227,"title":{},"body":{"overview.html":{}}}],["14d",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.3.1",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1226,"title":{},"body":{"overview.html":{}}}],["2/11",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["28d",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":570,"title":{},"body":{"classes/BaseEntity.html":{},"index.html":{}}}],["3.0.0",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":985,"title":{},"body":{"index.html":{}}}],["3})@automap",{"_index":558,"title":{},"body":{"classes/BaseEntity.html":{}}}],["4",{"_index":1228,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":106,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["5",{"_index":1225,"title":{},"body":{"overview.html":{}}}],["50",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{}}}],["7.1.9",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["7.7.0",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["8.7.7",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1132,"title":{},"body":{"index.html":{}}}],["access",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"classes/TokenPayloadDto.html":{},"index.html":{}}}],["accessors",{"_index":421,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/UserProfile.html":{}}}],["accesstoken",{"_index":540,"title":{},"body":{"classes/AuthSuccessDto.html":{},"index.html":{}}}],["acquiring",{"_index":1136,"title":{},"body":{"index.html":{}}}],["actual",{"_index":1201,"title":{},"body":{"index.html":{}}}],["actually",{"_index":1000,"title":{},"body":{"index.html":{}}}],["add",{"_index":1101,"title":{},"body":{"index.html":{}}}],["added",{"_index":1159,"title":{},"body":{"index.html":{}}}],["advised",{"_index":1205,"title":{},"body":{"index.html":{}}}],["again",{"_index":1185,"title":{},"body":{"index.html":{}}}],["against",{"_index":994,"title":{},"body":{"index.html":{}}}],["agent",{"_index":98,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["allows",{"_index":1155,"title":{},"body":{"index.html":{}}}],["another",{"_index":1102,"title":{},"body":{"index.html":{}}}],["api",{"_index":1007,"title":{},"body":{"index.html":{}}}],["apikey",{"_index":265,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["apiquery",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiresponse",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{}}}],["apitags('authentication",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('health",{"_index":665,"title":{},"body":{"controllers/HealthController.html":{}}}],["apiunauthorizedresponse",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app/app.config",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["app/auth/auth.controller",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["app/auth/auth.service",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["app/auth/decorators/public.decorator",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["app/auth/dto/auth",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["app/auth/dto/authenticated",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtMagicLinkStrategy.html":{}}}],["app/auth/dto/local",{"_index":430,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/JwtStrategy.html":{}}}],["app/auth/dto/refresh",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["app/auth/dto/request",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["app/auth/dto/token",{"_index":432,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["app/auth/guards/jwt",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["app/auth/strategies/jwt",{"_index":402,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["app/auth/strategies/jwt.strategy",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{}}}],["app/communication/communication.module",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{}}}],["app/communication/email.service",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"modules/CommunicationModule.html":{}}}],["app/communication/email_templates.enum",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["app/filters/all",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["app/health/health.controller",{"_index":671,"title":{},"body":{"modules/HealthModule.html":{}}}],["app/health/health.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["app/lib/base.entity",{"_index":818,"title":{},"body":{"entities/UserEntity.html":{}}}],["app/lib/database_logger",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["app/middleware/app_logger.middleware",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["app/users/dto/create",{"_index":835,"title":{},"body":{"injectables/UserProfile.html":{},"injectables/UserService.html":{}}}],["app/users/dto/user.dto",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{}}}],["app/users/enums/permissions.enum",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocalUserDto.html":{},"classes/TokenPayloadDto.html":{}}}],["app/users/user.entity",{"_index":827,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["app/users/user.module",{"_index":407,"title":{},"body":{"modules/AuthModule.html":{}}}],["app/users/user.profile",{"_index":828,"title":{},"body":{"modules/UserModule.html":{}}}],["app/users/user.repository",{"_index":829,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["app/users/user.service",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["app_filter",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["app_guard",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["app_runtime_config",{"_index":246,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"classes/DatabaseLogger.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appconfig",{"_index":889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appdomain",{"_index":240,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["applicationuserid",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocalUserDto.html":{}}}],["applied",{"_index":1183,"title":{},"body":{"index.html":{}}}],["apploggermiddleware",{"_index":78,"title":{"injectables/AppLoggerMiddleware.html":{}},"body":{"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":110,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appport",{"_index":241,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["approach",{"_index":1011,"title":{},"body":{"index.html":{}}}],["appruntime",{"_index":247,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["appruntimeconfig",{"_index":237,"title":{"interfaces/AppRuntimeConfig.html":{}},"body":{"interfaces/AppRuntimeConfig.html":{},"classes/DatabaseLogger.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{}}}],["appruntimeusername",{"_index":269,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["appruntimeuserpassword",{"_index":270,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["argumentshost",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(error.children",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(error.value",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/JwtMagicLinkStrategy.html":{},"classes/Somename1693507040444.html":{},"injectables/UserService.html":{}}}],["aud",{"_index":745,"title":{},"body":{"classes/RefreshTokenPayload.html":{},"classes/TokenPayloadDto.html":{}}}],["audience",{"_index":255,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"modules/AuthModule.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.controller.ts",{"_index":757,"title":{},"body":{"classes/RequestMagicLinkDto.html":{}}}],["auth.guard",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.guard.ts",{"_index":673,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":680,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:8",{"_index":677,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/magiclink",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["authcontroller",{"_index":129,"title":{"controllers/AuthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":1123,"title":{},"body":{"index.html":{}}}],["authenticateduserdto",{"_index":347,"title":{"classes/AuthenticatedUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthenticatedUserDto.html":{},"injectables/JwtMagicLinkStrategy.html":{},"coverage.html":{}}}],["authentication",{"_index":539,"title":{},"body":{"classes/AuthSuccessDto.html":{},"index.html":{}}}],["authguard",{"_index":684,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard('jwt",{"_index":687,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(jwtmagiclinkstrategy",{"_index":695,"title":{},"body":{"injectables/JwtMagicLinkGuard.html":{}}}],["authguard(jwtrefreshstrategyname",{"_index":717,"title":{},"body":{"injectables/JwtRefreshGuard.html":{}}}],["authmodule",{"_index":120,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1232,"title":{},"body":{"properties.html":{}}}],["authprofile",{"_index":417,"title":{"injectables/AuthProfile.html":{}},"body":{"injectables/AuthProfile.html":{},"coverage.html":{}}}],["authservice",{"_index":340,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsuccessdto",{"_index":344,"title":{"classes/AuthSuccessDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"coverage.html":{},"index.html":{}}}],["authsuccessdto})@useguards(jwtmagiclinkguard)@get('/magiclink",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["autoloadentities",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["automap",{"_index":564,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/LocalUserDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["automap()@isemail",{"_index":577,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["automap()@isuuid",{"_index":733,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["automapper/classes",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/LocalUserDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["automapper/core",{"_index":438,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{}}}],["automappermodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["automappermodule.forroot",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["automapperprofile",{"_index":420,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/UserProfile.html":{}}}],["available",{"_index":1223,"title":{},"body":{"modules.html":{}}}],["avoid",{"_index":1197,"title":{},"body":{"index.html":{}}}],["await",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"classes/Somename1693507040444.html":{},"injectables/UserService.html":{}}}],["base",{"_index":1212,"title":{},"body":{"index.html":{}}}],["based",{"_index":1038,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":550,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["baseurl",{"_index":93,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["battle",{"_index":1104,"title":{},"body":{"index.html":{}}}],["being",{"_index":1066,"title":{},"body":{"index.html":{}}}],["betterstack",{"_index":1114,"title":{},"body":{"index.html":{}}}],["blue",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":95,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["bonus",{"_index":1160,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":245,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{}}}],["bootstrap",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1221,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1219,"title":{},"body":{"modules.html":{}}}],["bump",{"_index":1041,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":1129,"title":{},"body":{"index.html":{}}}],["callback",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["callback/?token=${logintoken",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["called",{"_index":1191,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":674,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":678,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cases",{"_index":1203,"title":{},"body":{"index.html":{}}}],["catch",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{}}}],["catch(exception",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["change",{"_index":990,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1052,"title":{},"body":{"index.html":{}}}],["character",{"_index":781,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["check",{"_index":656,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["checkquick",{"_index":657,"title":{},"body":{"controllers/HealthController.html":{}}}],["checks",{"_index":1001,"title":{},"body":{"index.html":{}}}],["ci",{"_index":1170,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"classes/LocalUserDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"modules/CommunicationModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"classes/LocalUserDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["classmapper",{"_index":722,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["clicking",{"_index":1124,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":1168,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":394,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_communicationmodule",{"_index":571,"title":{},"body":{"modules/CommunicationModule.html":{},"overview.html":{}}}],["cluster_communicationmodule_exports",{"_index":573,"title":{},"body":{"modules/CommunicationModule.html":{},"overview.html":{}}}],["cluster_communicationmodule_providers",{"_index":572,"title":{},"body":{"modules/CommunicationModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":821,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":822,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":823,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cobertura",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1089,"title":{},"body":{"index.html":{}}}],["codebase",{"_index":1086,"title":{},"body":{"index.html":{}}}],["collectcoverage",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colors",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":819,"title":{},"body":{"entities/UserEntity.html":{}}}],["column()@automap",{"_index":812,"title":{},"body":{"entities/UserEntity.html":{}}}],["column({nullable",{"_index":814,"title":{},"body":{"entities/UserEntity.html":{}}}],["combination",{"_index":1111,"title":{},"body":{"index.html":{}}}],["combined",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["combinedfile",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comes",{"_index":1008,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1180,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1048,"title":{},"body":{"index.html":{}}}],["commits",{"_index":1039,"title":{},"body":{"index.html":{}}}],["committed",{"_index":1067,"title":{},"body":{"index.html":{}}}],["commonly",{"_index":1139,"title":{},"body":{"index.html":{}}}],["communication/communication.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["communicationmodule",{"_index":121,"title":{"modules/CommunicationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules.html":{},"overview.html":{}}}],["companyuserid",{"_index":731,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["compares",{"_index":1189,"title":{},"body":{"index.html":{}}}],["compose",{"_index":1020,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":1021,"title":{},"body":{"index.html":{}}}],["concerns",{"_index":1211,"title":{},"body":{"index.html":{}}}],["config",{"_index":897,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice.get(app_runtime_config",{"_index":612,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["configservice.get(jwt_config",{"_index":413,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get(pgsql_config",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get(sendgrid_config",{"_index":637,"title":{},"body":{"injectables/EmailService.html":{}}}],["configuration",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["configuration().appruntime",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["consistency",{"_index":1057,"title":{},"body":{"index.html":{}}}],["console",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":783,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["constructor",{"_index":423,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmapper",{"_index":440,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/UserProfile.html":{}}}],["constructor(configservice",{"_index":589,"title":{},"body":{"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(datasource",{"_index":839,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(mapper",{"_index":424,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/UserProfile.html":{}}}],["constructor(private",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["constructor(reflector",{"_index":675,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(repository",{"_index":850,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(apploggermiddleware).forroutes",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["container",{"_index":1010,"title":{},"body":{"index.html":{}}}],["containerization",{"_index":976,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1130,"title":{},"body":{"index.html":{}}}],["contentlength",{"_index":101,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["contents",{"_index":975,"title":{},"body":{"index.html":{}}}],["context",{"_index":681,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.getclass",{"_index":692,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":691,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":302,"title":{"controllers/AuthController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller.config.ts",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller.spec.ts",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["coverage",{"_index":863,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coveragereporters",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["create.company",{"_index":953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["create_company",{"_index":952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createasync",{"_index":847,"title":{},"body":{"injectables/UserService.html":{}}}],["createasync(createdto",{"_index":852,"title":{},"body":{"injectables/UserService.html":{}}}],["created",{"_index":1074,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":552,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Somename1693507040444.html":{}}}],["createdatecolumn",{"_index":565,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdatecolumn({type",{"_index":555,"title":{},"body":{"classes/BaseEntity.html":{}}}],["createdto",{"_index":854,"title":{},"body":{"injectables/UserService.html":{}}}],["createidtokenpayload",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["createidtokenpayload(userdto",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["createmap",{"_index":434,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/UserProfile.html":{}}}],["createmap(mapper",{"_index":836,"title":{},"body":{"injectables/UserProfile.html":{}}}],["createrefreshtokenasync",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["createrefreshtokenasync(applicationuserid",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtokenformagiclinkasync",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtokenformagiclinkasync(userdto",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto",{"_index":575,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["critical",{"_index":1195,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getrequest",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["current",{"_index":1137,"title":{},"body":{"index.html":{}}}],["currently",{"_index":1163,"title":{},"body":{"index.html":{}}}],["custom",{"_index":1178,"title":{},"body":{"index.html":{}}}],["customdecorator",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["daily",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["database",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["databaselogger",{"_index":148,"title":{"classes/DatabaseLogger.html":{}},"body":{"modules/AppModule.html":{},"classes/DatabaseLogger.html":{},"coverage.html":{},"index.html":{}}}],["databaselogger(configservice",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["databases",{"_index":1162,"title":{},"body":{"index.html":{}}}],["datasource",{"_index":840,"title":{},"body":{"injectables/UserRepository.html":{}}}],["datasource.createentitymanager",{"_index":845,"title":{},"body":{"injectables/UserRepository.html":{}}}],["date",{"_index":554,"title":{},"body":{"classes/BaseEntity.html":{}}}],["days",{"_index":1091,"title":{},"body":{"index.html":{}}}],["db",{"_index":1004,"title":{},"body":{"index.html":{}}}],["dbname",{"_index":271,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["deconstruct",{"_index":1131,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"controllers/HealthController.html":{},"classes/LocalUserDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/RequestMagicLinkDto.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["default",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"modules/HealthModule.html":{},"classes/Somename1693507040444.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults.modulefileextensions",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["demo.perm",{"_index":951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["demo_perm",{"_index":950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":112,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/RequestMagicLinkDto.html":{},"classes/TokenPayloadDto.html":{},"index.html":{},"properties.html":{}}}],["design",{"_index":1193,"title":{},"body":{"index.html":{}}}],["dest",{"_index":443,"title":{},"body":{"injectables/AuthProfile.html":{}}}],["dest.applicationuserid",{"_index":444,"title":{},"body":{"injectables/AuthProfile.html":{}}}],["detail",{"_index":969,"title":{},"body":{"index.html":{}}}],["details",{"_index":961,"title":{},"body":{"index.html":{}}}],["developed",{"_index":1164,"title":{},"body":{"index.html":{}}}],["development",{"_index":1034,"title":{},"body":{"index.html":{}}}],["different",{"_index":995,"title":{},"body":{"index.html":{}}}],["dirname",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":1206,"title":{},"body":{"index.html":{}}}],["distinguishes",{"_index":1202,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1013,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1016,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":1103,"title":{},"body":{"index.html":{}}}],["dotenv",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":765,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["down(queryrunner",{"_index":768,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["dropdb",{"_index":273,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["dto",{"_index":538,"title":{},"body":{"classes/AuthSuccessDto.html":{},"classes/RequestMagicLinkDto.html":{},"index.html":{}}}],["due",{"_index":1209,"title":{},"body":{"index.html":{}}}],["during",{"_index":1080,"title":{},"body":{"index.html":{}}}],["dynamictemplatedata",{"_index":630,"title":{},"body":{"injectables/EmailService.html":{}}}],["e",{"_index":649,"title":{},"body":{"injectables/EmailService.html":{}}}],["e2e",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e.config.ts",{"_index":898,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["easy",{"_index":1181,"title":{},"body":{"index.html":{}}}],["edit",{"_index":987,"title":{},"body":{"index.html":{}}}],["edited",{"_index":1173,"title":{},"body":{"index.html":{}}}],["editor",{"_index":980,"title":{},"body":{"index.html":{}}}],["editorconfig",{"_index":1088,"title":{},"body":{"index.html":{}}}],["editors/ide",{"_index":1090,"title":{},"body":{"index.html":{}}}],["email",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUserDto.html":{},"classes/CreateUserDto.html":{},"injectables/EmailService.html":{},"injectables/JwtMagicLinkStrategy.html":{},"classes/LocalUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"index.html":{}}}],["email'})@apiresponse({type",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["email[${templatename",{"_index":646,"title":{},"body":{"injectables/EmailService.html":{}}}],["emailservice",{"_index":459,"title":{"injectables/EmailService.html":{}},"body":{"injectables/AuthService.html":{},"modules/CommunicationModule.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["emailtemplate",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"miscellaneous/enumerations.html":{}}}],["emailtemplate.magiclinkemail",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["employ",{"_index":1087,"title":{},"body":{"index.html":{}}}],["ending",{"_index":1064,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":756,"title":{},"body":{"classes/RequestMagicLinkDto.html":{}}}],["endpoints",{"_index":998,"title":{},"body":{"index.html":{}}}],["entities",{"_index":810,"title":{},"body":{"entities/UserEntity.html":{},"index.html":{},"overview.html":{}}}],["entity",{"_index":808,"title":{"entities/UserEntity.html":{}},"body":{"entities/UserEntity.html":{},"coverage.html":{},"index.html":{}}}],["enumerations",{"_index":944,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":989,"title":{},"body":{"index.html":{}}}],["env.${process.env.node_env",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["env.your",{"_index":988,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["environments",{"_index":1208,"title":{},"body":{"index.html":{}}}],["err",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["err[error.property",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/DatabaseLogger.html":{},"miscellaneous/variables.html":{}}}],["error(`could",{"_index":650,"title":{},"body":{"injectables/EmailService.html":{}}}],["error.children.length",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error.constraints",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error.constraints[p",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["error.property",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["errorfile",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errormessage",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["errors",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["errortype",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["even",{"_index":962,"title":{},"body":{"index.html":{}}}],["everything",{"_index":1015,"title":{},"body":{"index.html":{}}}],["example",{"_index":1047,"title":{},"body":{"index.html":{}}}],["exception",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getresponse",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.name",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.stack",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception['statuscode",{"_index":73,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfactory",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["exceptions.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:16",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:5",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter.ts:7",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exchange",{"_index":1134,"title":{},"body":{"index.html":{}}}],["exclusively",{"_index":755,"title":{},"body":{"classes/RequestMagicLinkDto.html":{}}}],["executing_company",{"_index":732,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["executioncontext",{"_index":679,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exists",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiration",{"_index":257,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["expired",{"_index":1138,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["explanatory",{"_index":1154,"title":{},"body":{"index.html":{}}}],["export",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"modules/CommunicationModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"index.html":{}}}],["exports",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/HealthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":90,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"dependencies.html":{},"index.html":{}}}],["extends",{"_index":419,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"entities/UserEntity.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{}}}],["extension",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extra",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["extractjwt",{"_index":702,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":725,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromurlqueryparameter('token",{"_index":707,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["faker",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":709,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["familiar",{"_index":1108,"title":{},"body":{"index.html":{}}}],["family_name",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocalUserDto.html":{},"classes/TokenPayloadDto.html":{}}}],["faster",{"_index":1006,"title":{},"body":{"index.html":{}}}],["feature",{"_index":1049,"title":{},"body":{"index.html":{}}}],["few",{"_index":1059,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"modules/CommunicationModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["filename",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1065,"title":{},"body":{"index.html":{}}}],["find",{"_index":1014,"title":{},"body":{"index.html":{}}}],["findonebyemailasync",{"_index":848,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyemailasync(email",{"_index":855,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyidasync",{"_index":849,"title":{},"body":{"injectables/UserService.html":{}}}],["findonebyidasync(id",{"_index":857,"title":{},"body":{"injectables/UserService.html":{}}}],["first",{"_index":1192,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthenticatedUserDto.html":{},"injectables/JwtMagicLinkStrategy.html":{},"classes/Somename1693507040444.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["flow",{"_index":1125,"title":{},"body":{"index.html":{}}}],["folder",{"_index":974,"title":{},"body":{"index.html":{}}}],["following",{"_index":1051,"title":{},"body":{"index.html":{}}}],["follows",{"_index":1126,"title":{},"body":{"index.html":{}}}],["forcing",{"_index":1145,"title":{},"body":{"index.html":{}}}],["format",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formaterrors",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formaterrors(error.children",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["formaterrors(errors",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["formattederrors",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["formattederrors.flat",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["formattederrors.push(err",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["formattederrors.push(formaterrors(error.children",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["formattederrors.push(ob",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["formember",{"_index":435,"title":{},"body":{"injectables/AuthProfile.html":{}}}],["free",{"_index":1100,"title":{},"body":{"index.html":{}}}],["function",{"_index":894,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["functionality",{"_index":1177,"title":{},"body":{"index.html":{}}}],["functions",{"_index":956,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generateauthenticatedtokenbundleasync",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateauthenticatedtokenbundleasync(userdto",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["generated",{"_index":1079,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1188,"title":{},"body":{"index.html":{}}}],["get('/magiclink",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/q",{"_index":669,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/q')@healthcheck",{"_index":660,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/refresh",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/request",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@healthcheck",{"_index":658,"title":{},"body":{"controllers/HealthController.html":{}}}],["getprofile",{"_index":427,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/UserProfile.html":{}}}],["getresponsemessage",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["gettemplateidbyname",{"_index":623,"title":{},"body":{"injectables/EmailService.html":{}}}],["gettemplateidbyname(templatename",{"_index":626,"title":{},"body":{"injectables/EmailService.html":{}}}],["getting",{"_index":958,"title":{"index.html":{}},"body":{}}],["gettransports",{"_index":890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["git",{"_index":978,"title":{},"body":{"index.html":{}}}],["gitattributes",{"_index":1061,"title":{},"body":{"index.html":{}}}],["gitignore",{"_index":1073,"title":{},"body":{"index.html":{}}}],["gitversion",{"_index":1023,"title":{},"body":{"index.html":{}}}],["gitversion.yml",{"_index":1054,"title":{},"body":{"index.html":{}}}],["given_name",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocalUserDto.html":{},"classes/TokenPayloadDto.html":{}}}],["golevelup/ts",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["graph",{"_index":1222,"title":{},"body":{"modules.html":{}}}],["handle",{"_index":1161,"title":{},"body":{"index.html":{}}}],["health",{"_index":666,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["health/health.controller",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":662,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["healthchecks",{"_index":993,"title":{},"body":{"index.html":{}}}],["healthcheckservice",{"_index":663,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":130,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":122,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["here",{"_index":964,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hierarchy",{"_index":1096,"title":{},"body":{"index.html":{}}}],["highly",{"_index":1198,"title":{},"body":{"index.html":{}}}],["host",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http://localhost:3000",{"_index":1213,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/api",{"_index":1217,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/v1/health",{"_index":1214,"title":{},"body":{"index.html":{}}}],["http://localhost:8000/v1/health/q",{"_index":1215,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.no_content)@apiquery({name",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok)@apiunauthorizedresponse()@apiquery({name",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://github.com/gittools/gitversion",{"_index":1024,"title":{},"body":{"index.html":{}}}],["https://gitversion.net/docs/reference/intro",{"_index":1025,"title":{},"body":{"index.html":{}}}],["https://gitversion.net/docs/reference/versioning",{"_index":1032,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{}}}],["httpstatus.internal_server_error",{"_index":74,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["iat",{"_index":746,"title":{},"body":{"classes/RefreshTokenPayload.html":{},"classes/TokenPayloadDto.html":{}}}],["id",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"classes/RefreshUserDto.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"index.html":{}}}],["identifier",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["idtoken",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"index.html":{}}}],["idtoken).'})@useguards(jwtrefreshguard)@get('/refresh",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["idtokenexpiration",{"_index":259,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["idtokens",{"_index":1135,"title":{},"body":{"index.html":{}}}],["idtokensecret",{"_index":258,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":708,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"classes/DatabaseLogger.html":{},"classes/Somename1693507040444.html":{}}}],["import",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"modules/CommunicationModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"classes/RefreshTokenPayload.html":{},"classes/RequestMagicLinkDto.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/UserModule.html":{}}}],["in'})@get('/request",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["inactive",{"_index":1141,"title":{},"body":{"index.html":{}}}],["increment",{"_index":1036,"title":{},"body":{"index.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"interfaces/AppRuntimeConfig.html":{},"controllers/AuthController.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"modules/CommunicationModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["info.context",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.level",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.message",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.stack",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":77,"title":{"injectables/AppLoggerMiddleware.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppLoggerMiddleware.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":79,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmapper",{"_index":439,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{}}}],["inside",{"_index":789,"title":{},"body":{"classes/TokenPayloadDto.html":{},"index.html":{}}}],["instance",{"_index":1166,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["instead",{"_index":1144,"title":{},"body":{"index.html":{}}}],["interface",{"_index":236,"title":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{}},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":238,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"overview.html":{}}}],["invalid",{"_index":653,"title":{},"body":{"injectables/EmailService.html":{}}}],["involved",{"_index":1121,"title":{},"body":{"index.html":{}}}],["ip",{"_index":91,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["is_public_key",{"_index":683,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":579,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"classes/UserDto.html":{}}}],["isemail()@isnotempty",{"_index":758,"title":{},"body":{"classes/RequestMagicLinkDto.html":{}}}],["isemail()@isnotempty()@automap",{"_index":801,"title":{},"body":{"classes/UserDto.html":{}}}],["isglobal",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":760,"title":{},"body":{"classes/RequestMagicLinkDto.html":{},"classes/UserDto.html":{}}}],["isnotempty()@automap",{"_index":803,"title":{},"body":{"classes/UserDto.html":{}}}],["ispublic",{"_index":689,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":747,"title":{},"body":{"classes/RefreshTokenPayload.html":{},"classes/TokenPayloadDto.html":{}}}],["issuer",{"_index":256,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"modules/AuthModule.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["isuuid",{"_index":742,"title":{},"body":{"classes/LocalUserDto.html":{},"classes/UserDto.html":{}}}],["isuuid()@automap",{"_index":805,"title":{},"body":{"classes/UserDto.html":{}}}],["jest",{"_index":908,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["js",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js/faker",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1218,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["json.stringify",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{}}}],["json.stringify(parameters",{"_index":621,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["junit",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":249,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jwt_config",{"_index":248,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":142,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtconfig",{"_index":253,"title":{"interfaces/JwtConfig.html":{}},"body":{"interfaces/AppRuntimeConfig.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{}}}],["jwtconfig.audience",{"_index":416,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconfig.issuer",{"_index":415,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconfig.secret",{"_index":726,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":706,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmagiclinkguard",{"_index":355,"title":{"injectables/JwtMagicLinkGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtMagicLinkGuard.html":{},"coverage.html":{}}}],["jwtmagiclinkstrategy",{"_index":398,"title":{"injectables/JwtMagicLinkStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["jwtmodule",{"_index":408,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":412,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":357,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["jwtrefreshstrategy",{"_index":399,"title":{"injectables/JwtRefreshStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtrefreshstrategyname",{"_index":716,"title":{},"body":{"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":400,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keep",{"_index":1083,"title":{},"body":{"index.html":{}}}],["key",{"_index":267,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"injectables/EmailService.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{}}}],["known",{"_index":1113,"title":{},"body":{"index.html":{}}}],["lastly",{"_index":1035,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthenticatedUserDto.html":{},"injectables/JwtMagicLinkStrategy.html":{},"classes/Somename1693507040444.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{}}}],["legend",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":103,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["less",{"_index":1194,"title":{},"body":{"index.html":{}}}],["level",{"_index":596,"title":{},"body":{"classes/DatabaseLogger.html":{},"miscellaneous/variables.html":{}}}],["levels",{"_index":1097,"title":{},"body":{"index.html":{}}}],["lf",{"_index":1068,"title":{},"body":{"index.html":{}}}],["license",{"_index":1230,"title":{},"body":{"properties.html":{}}}],["link",{"_index":754,"title":{},"body":{"classes/RequestMagicLinkDto.html":{},"index.html":{}}}],["link.dto",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["link.dto.ts",{"_index":753,"title":{},"body":{"classes/RequestMagicLinkDto.html":{},"coverage.html":{}}}],["link.dto.ts:10",{"_index":759,"title":{},"body":{"classes/RequestMagicLinkDto.html":{}}}],["link.guard",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["link.guard.ts",{"_index":694,"title":{},"body":{"injectables/JwtMagicLinkGuard.html":{},"coverage.html":{}}}],["links",{"_index":983,"title":{},"body":{"index.html":{}}}],["literal",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"injectables/EmailService.html":{},"interfaces/SendGridConfig.html":{}}}],["load",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":1081,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1075,"title":{},"body":{"index.html":{}}}],["localuserdto",{"_index":429,"title":{"classes/LocalUserDto.html":{}},"body":{"injectables/AuthProfile.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"coverage.html":{}}}],["log",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"classes/DatabaseLogger.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["log(level",{"_index":593,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logged",{"_index":1140,"title":{},"body":{"index.html":{}}}],["logger",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logger(allexceptionsfilter.name",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["logger(apploggermiddleware.name",{"_index":87,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["logger(databaselogger.name",{"_index":591,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logger(emailservice.name",{"_index":632,"title":{},"body":{"injectables/EmailService.html":{}}}],["logging",{"_index":981,"title":{},"body":{"index.html":{}}}],["logging.ts",{"_index":1118,"title":{},"body":{"index.html":{}}}],["login",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RequestMagicLinkDto.html":{},"index.html":{}}}],["login/register",{"_index":1127,"title":{},"body":{"index.html":{}}}],["logintoken",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["logmigration",{"_index":583,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logmigration(message",{"_index":597,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logquery",{"_index":584,"title":{},"body":{"classes/DatabaseLogger.html":{},"index.html":{}}}],["logquery(query",{"_index":599,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logqueryerror",{"_index":585,"title":{},"body":{"classes/DatabaseLogger.html":{},"index.html":{}}}],["logqueryerror(error",{"_index":602,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logqueryslow",{"_index":586,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logqueryslow(time",{"_index":604,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logs",{"_index":1112,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["logschemabuild",{"_index":587,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logschemabuild(message",{"_index":607,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["logservicetoken",{"_index":242,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["logsql",{"_index":243,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logtail",{"_index":891,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["logtail(appconfig.logservicetoken",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logtail/node",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["logtail/winston",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["logtailtransport(logtail",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["look",{"_index":1050,"title":{},"body":{"index.html":{}}}],["made",{"_index":1186,"title":{},"body":{"index.html":{}}}],["magic",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtMagicLinkGuard.html":{},"classes/RequestMagicLinkDto.html":{},"coverage.html":{},"index.html":{}}}],["magiclink",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtMagicLinkStrategy.html":{},"miscellaneous/variables.html":{}}}],["magiclink\"/\"passwordless",{"_index":1120,"title":{},"body":{"index.html":{}}}],["magiclink.strategy",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtMagicLinkGuard.html":{}}}],["magiclink.strategy.ts",{"_index":697,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["magiclink.strategy.ts:11",{"_index":698,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{}}}],["magiclink.strategy.ts:21",{"_index":700,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{}}}],["magiclinkcallback",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["magiclinkcallback(@request",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["magiclinkcallback(undefined",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["magiclinkemail",{"_index":948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["magiclinkemailid",{"_index":290,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["magiclinktokenexpiration",{"_index":263,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["magiclinktokensecret",{"_index":262,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkStrategy.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":972,"title":{},"body":{"index.html":{}}}],["mainline",{"_index":1030,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":1056,"title":{},"body":{"index.html":{}}}],["major",{"_index":1040,"title":{},"body":{"index.html":{}}}],["make",{"_index":1062,"title":{},"body":{"index.html":{}}}],["mapfrom",{"_index":436,"title":{},"body":{"injectables/AuthProfile.html":{}}}],["mapfrom((target",{"_index":445,"title":{},"body":{"injectables/AuthProfile.html":{}}}],["mapper",{"_index":425,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{}}}],["mappingprofile",{"_index":437,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/UserProfile.html":{}}}],["master",{"_index":1029,"title":{},"body":{"index.html":{}}}],["matching",{"_index":76,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"modules/CommunicationModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mentioning",{"_index":1094,"title":{},"body":{"index.html":{}}}],["message",{"_index":104,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"classes/DatabaseLogger.html":{},"index.html":{}}}],["metadata",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":92,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["methods",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/Somename1693507040444.html":{},"injectables/UserService.html":{}}}],["middlewareconsumer",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["migration",{"_index":1174,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":764,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["minor",{"_index":1043,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":943,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mm",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":1031,"title":{},"body":{"index.html":{}}}],["modes/mainline",{"_index":1033,"title":{},"body":{"index.html":{}}}],["module",{"_index":109,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/HealthModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/HealthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["moduledirectories",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulefileextensions",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":111,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/HealthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["msg",{"_index":639,"title":{},"body":{"injectables/EmailService.html":{}}}],["name",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":1106,"title":{},"body":{"index.html":{}}}],["need",{"_index":1116,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1175,"title":{},"body":{"index.html":{}}}],["neon",{"_index":1167,"title":{},"body":{"index.html":{}}}],["nest",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["nestjs",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthProfile.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"modules/CommunicationModule.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":685,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":89,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["new",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":83,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["nextfunction",{"_index":84,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["node",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node_modules",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noted",{"_index":1187,"title":{},"body":{"index.html":{}}}],["now",{"_index":780,"title":{},"body":{"classes/Somename1693507040444.html":{},"index.html":{}}}],["npm",{"_index":1179,"title":{},"body":{"index.html":{}}}],["null",{"_index":777,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["nullable",{"_index":820,"title":{},"body":{"entities/UserEntity.html":{}}}],["number",{"_index":244,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"classes/DatabaseLogger.html":{},"controllers/HealthController.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"interfaces/SendGridConfig.html":{},"classes/TokenPayloadDto.html":{}}}],["ob",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["ob.errors",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(error.constraints).map((p",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":682,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["one",{"_index":1099,"title":{},"body":{"index.html":{}}}],["optional",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/RefreshTokenPayload.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["order",{"_index":1055,"title":{},"body":{"index.html":{}}}],["orm",{"_index":1156,"title":{},"body":{"index.html":{}}}],["os",{"_index":1070,"title":{},"body":{"index.html":{}}}],["others",{"_index":1196,"title":{},"body":{"index.html":{}}}],["out",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["override",{"_index":442,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/UserProfile.html":{}}}],["overview",{"_index":1224,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p1",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":902,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["param",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["parameters",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/Somename1693507040444.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["parentname",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["parentname}.${error.property",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":704,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":701,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":705,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["password",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["patch",{"_index":1045,"title":{},"body":{"index.html":{}}}],["path",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"controllers/HealthController.html":{}}}],["payload",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.dto",{"_index":433,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.dto.ts",{"_index":744,"title":{},"body":{"classes/RefreshTokenPayload.html":{},"classes/TokenPayloadDto.html":{},"coverage.html":{}}}],["payload.dto.ts:11",{"_index":748,"title":{},"body":{"classes/RefreshTokenPayload.html":{}}}],["payload.dto.ts:12",{"_index":799,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.dto.ts:14",{"_index":749,"title":{},"body":{"classes/RefreshTokenPayload.html":{}}}],["payload.dto.ts:15",{"_index":790,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.dto.ts:18",{"_index":794,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.dto.ts:21",{"_index":796,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.dto.ts:24",{"_index":793,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.dto.ts:27",{"_index":792,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.dto.ts:30",{"_index":791,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.dto.ts:33",{"_index":797,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.dto.ts:36",{"_index":798,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.dto.ts:5",{"_index":750,"title":{},"body":{"classes/RefreshTokenPayload.html":{}}}],["payload.dto.ts:8",{"_index":751,"title":{},"body":{"classes/RefreshTokenPayload.html":{}}}],["payload.dto.ts:9",{"_index":795,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["payload.email",{"_index":712,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{}}}],["payload.firstname",{"_index":713,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{}}}],["payload.lastname",{"_index":714,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{}}}],["payload.permissions",{"_index":729,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":711,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{}}}],["period",{"_index":1143,"title":{},"body":{"index.html":{}}}],["permission",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocalUserDto.html":{},"classes/TokenPayloadDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["permissions",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocalUserDto.html":{},"classes/TokenPayloadDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissions_key",{"_index":878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pg",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["pgsql",{"_index":252,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["pgsql_config",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pgsqlconfig",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["pgsqlconfig.appruntimeusername",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["pgsqlconfig.appruntimeuserpassword",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["pgsqlconfig.dbname",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["pgsqlconfig.host",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["pgsqlconfig.port",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["pgsqlconfig.rejectunauthorized",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["pgsqlconfig.shouldusessl",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["pgsqldbconfig",{"_index":138,"title":{"interfaces/PgsqlDbConfig.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{}}}],["pipeline",{"_index":1171,"title":{},"body":{"index.html":{}}}],["pk_b54f8ea623b17094db7667d8206",{"_index":784,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["please",{"_index":986,"title":{},"body":{"index.html":{}}}],["port",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["postgres",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["postgresql",{"_index":1165,"title":{},"body":{"index.html":{}}}],["pr",{"_index":1028,"title":{},"body":{"index.html":{}}}],["precision",{"_index":557,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primary",{"_index":785,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["primarygeneratedcolumn",{"_index":566,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":569,"title":{},"body":{"classes/BaseEntity.html":{}}}],["primarygeneratedcolumn('uuid')@automap",{"_index":560,"title":{},"body":{"classes/BaseEntity.html":{}}}],["private",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["probably",{"_index":1110,"title":{},"body":{"index.html":{}}}],["process",{"_index":1149,"title":{},"body":{"index.html":{}}}],["process.env.app_domain",{"_index":275,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.app_port",{"_index":276,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.app_runtime_user",{"_index":294,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.app_runtime_user_password",{"_index":295,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.enable_debug_log_files",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_aud",{"_index":279,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_expiration",{"_index":282,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_id_token_expiration",{"_index":284,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_id_token_secret",{"_index":283,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_iss",{"_index":280,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_magiclink_expiration",{"_index":288,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_magiclink_secret",{"_index":287,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_refresh_id_token_expiration",{"_index":286,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_refresh_id_token_secret",{"_index":285,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.jwt_secret",{"_index":281,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.log_sql_statements",{"_index":278,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.logservice_token",{"_index":277,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.postgres_db",{"_index":296,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.postgres_drop_db",{"_index":300,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.postgres_host",{"_index":293,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.postgres_port",{"_index":297,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.postgres_reject_unauthorized",{"_index":299,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.postgres_run_migrations",{"_index":301,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.postgres_should_use_ssl",{"_index":298,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.sendgrid_api_key",{"_index":289,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.sendgrid_sender_email",{"_index":292,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.sendgrid_sendgrid_magic_link_email_id",{"_index":291,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":1207,"title":{},"body":{"index.html":{}}}],["profile",{"_index":422,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/UserProfile.html":{}}}],["promise",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"classes/Somename1693507040444.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"interfaces/AppRuntimeConfig.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"interfaces/JwtConfig.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"index.html":{},"properties.html":{}}}],["provide",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["providers",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/HealthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"classes/Somename1693507040444.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["push",{"_index":1027,"title":{},"body":{"index.html":{}}}],["pushed",{"_index":1076,"title":{},"body":{"index.html":{}}}],["query",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"classes/DatabaseLogger.html":{},"index.html":{}}}],["queryrunner",{"_index":769,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["queryrunner.query(`create",{"_index":773,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["queryrunner.query(`drop",{"_index":786,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["quite",{"_index":1152,"title":{},"body":{"index.html":{}}}],["raw",{"_index":1157,"title":{},"body":{"index.html":{}}}],["re",{"_index":1148,"title":{},"body":{"index.html":{}}}],["read.company",{"_index":955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["read_company",{"_index":954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["readme",{"_index":970,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["receive",{"_index":1128,"title":{},"body":{"index.html":{}}}],["red",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refer",{"_index":1053,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":676,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["refresh",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshStrategy.html":{},"miscellaneous/variables.html":{}}}],["refresh.guard",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh.guard.ts",{"_index":715,"title":{},"body":{"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["refresh.strategy",{"_index":404,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshGuard.html":{}}}],["refresh.strategy.ts",{"_index":718,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresh.strategy.ts:11",{"_index":719,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh.strategy.ts:21",{"_index":720,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refreshed",{"_index":1151,"title":{},"body":{"index.html":{}}}],["refreshidtoken",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshidtoken(@request",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshidtoken(undefined",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshidtokenasync",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshidtokenasync(id",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshidtokenexpiration",{"_index":261,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["refreshidtokensecret",{"_index":260,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtRefreshStrategy.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"index.html":{}}}],["refreshtokenpayload",{"_index":485,"title":{"classes/RefreshTokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"classes/RefreshTokenPayload.html":{},"coverage.html":{}}}],["refreshuserdto",{"_index":350,"title":{"classes/RefreshUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshStrategy.html":{},"classes/RefreshUserDto.html":{},"coverage.html":{}}}],["regarding",{"_index":1017,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":1069,"title":{},"body":{"index.html":{}}}],["rejectunauthorized",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":1060,"title":{},"body":{"index.html":{}}}],["release",{"_index":1022,"title":{},"body":{"index.html":{}}}],["remote",{"_index":1077,"title":{},"body":{"index.html":{}}}],["repo",{"_index":966,"title":{},"body":{"index.html":{}}}],["reporters",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":838,"title":{},"body":{"injectables/UserRepository.html":{},"injectables/UserService.html":{},"index.html":{}}}],["representation",{"_index":1190,"title":{},"body":{"index.html":{}}}],["represents",{"_index":788,"title":{},"body":{"classes/TokenPayloadDto.html":{}}}],["request",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"controllers/AuthController.html":{},"classes/RequestMagicLinkDto.html":{}}}],["request.get('user",{"_index":97,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["request.url",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["requested",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestemaillogin",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["requestemaillogin(@query",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["requestemaillogin(undefined",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["requestemailmagicloginasync",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestemailmagicloginasync(email",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["requestmagiclinkdto",{"_index":331,"title":{"classes/RequestMagicLinkDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RequestMagicLinkDto.html":{},"coverage.html":{}}}],["requests",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"classes/RequestMagicLinkDto.html":{},"index.html":{}}}],["res",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["res.error",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["res.message",{"_index":70,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["res.statuscode",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["reset",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["respobj",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["response",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{}}}],["response.get('content",{"_index":102,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["response.on('close",{"_index":99,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["response.status(respobj.statuscode).json(respobj",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":643,"title":{},"body":{"injectables/EmailService.html":{},"index.html":{}}}],["result[0].statuscode",{"_index":648,"title":{},"body":{"injectables/EmailService.html":{}}}],["results",{"_index":75,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"modules/CommunicationModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":647,"title":{},"body":{"injectables/EmailService.html":{}}}],["returns",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/Somename1693507040444.html":{},"injectables/UserService.html":{},"index.html":{}}}],["rlsinterceptor",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["roles",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{},"classes/LocalUserDto.html":{},"classes/TokenPayloadDto.html":{}}}],["rootdir",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rotate",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":1019,"title":{},"body":{"index.html":{}}}],["runmigrations",{"_index":274,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":984,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":686,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["scope",{"_index":842,"title":{},"body":{"injectables/UserRepository.html":{}}}],["scope.request",{"_index":843,"title":{},"body":{"injectables/UserRepository.html":{}}}],["scopes",{"_index":996,"title":{},"body":{"index.html":{}}}],["secret",{"_index":254,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"injectables/AuthService.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":710,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["security",{"_index":1210,"title":{},"body":{"index.html":{}}}],["see",{"_index":1133,"title":{},"body":{"index.html":{}}}],["self",{"_index":1153,"title":{},"body":{"index.html":{}}}],["semver",{"_index":1026,"title":{},"body":{"index.html":{}}}],["semver:\\s?(breaking|major",{"_index":1042,"title":{},"body":{"index.html":{}}}],["semver:\\s?(feature|minor",{"_index":1044,"title":{},"body":{"index.html":{}}}],["semver:\\s?(fix|patch|task|info)'for",{"_index":1046,"title":{},"body":{"index.html":{}}}],["send",{"_index":651,"title":{},"body":{"injectables/EmailService.html":{},"index.html":{}}}],["sendemailasync",{"_index":624,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendemailasync(to",{"_index":629,"title":{},"body":{"injectables/EmailService.html":{}}}],["senderemail",{"_index":268,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["sendgrid",{"_index":251,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["sendgrid/mail",{"_index":635,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["sendgrid_config",{"_index":250,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"injectables/EmailService.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sendgridconfig",{"_index":264,"title":{"interfaces/SendGridConfig.html":{}},"body":{"interfaces/AppRuntimeConfig.html":{},"injectables/EmailService.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{}}}],["sendloginemailasync",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendloginemailasync(userdto",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["sensitive",{"_index":1199,"title":{},"body":{"index.html":{}}}],["sent",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"index.html":{}}}],["service",{"_index":1115,"title":{},"body":{"index.html":{}}}],["service.spec.ts",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services",{"_index":1003,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(permissions_key",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setups",{"_index":1109,"title":{},"body":{"index.html":{}}}],["sgmail",{"_index":634,"title":{},"body":{"injectables/EmailService.html":{}}}],["sgmail.send(msg",{"_index":644,"title":{},"body":{"injectables/EmailService.html":{}}}],["sgmail.setapikey(this.sendgridconfig.apikey",{"_index":638,"title":{},"body":{"injectables/EmailService.html":{}}}],["shouldusessl",{"_index":272,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["signoptions",{"_index":414,"title":{},"body":{"modules/AuthModule.html":{}}}],["silly",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":1009,"title":{},"body":{"index.html":{}}}],["somename.ts",{"_index":763,"title":{},"body":{"classes/Somename1693507040444.html":{},"coverage.html":{}}}],["somename.ts:10",{"_index":770,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["somename.ts:4",{"_index":767,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["somename.ts:6",{"_index":772,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["somename1693507040444",{"_index":761,"title":{"classes/Somename1693507040444.html":{}},"body":{"classes/Somename1693507040444.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"modules/CommunicationModule.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{}}}],["span",{"_index":965,"title":{},"body":{"index.html":{}}}],["spec.ts",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specifics",{"_index":979,"title":{},"body":{"index.html":{}}}],["sql",{"_index":1158,"title":{},"body":{"index.html":{}}}],["src",{"_index":973,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["src/$1",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email_templates.enum.ts",{"_index":945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jwt",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logging.ts",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permissions.decorator.ts",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permissions.enum.ts",{"_index":946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../public.decorator.ts",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.config.ts",{"_index":239,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts:92",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:41",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:60",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":401,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.profile.ts",{"_index":418,"title":{},"body":{"injectables/AuthProfile.html":{},"coverage.html":{}}}],["src/auth/auth.profile.ts:13",{"_index":428,"title":{},"body":{"injectables/AuthProfile.html":{}}}],["src/auth/auth.profile.ts:8",{"_index":426,"title":{},"body":{"injectables/AuthProfile.html":{}}}],["src/auth/auth.service.ts",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:103",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:113",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:31",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:52",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:68",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:78",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/permissions.decorator.ts",{"_index":877,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/public.decorator.ts",{"_index":879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth",{"_index":535,"title":{},"body":{"classes/AuthSuccessDto.html":{},"coverage.html":{}}}],["src/auth/dto/authenticated",{"_index":544,"title":{},"body":{"classes/AuthenticatedUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/local",{"_index":730,"title":{},"body":{"classes/LocalUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/refresh",{"_index":743,"title":{},"body":{"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/request",{"_index":752,"title":{},"body":{"classes/RequestMagicLinkDto.html":{},"coverage.html":{}}}],["src/auth/dto/token",{"_index":787,"title":{},"body":{"classes/TokenPayloadDto.html":{},"coverage.html":{}}}],["src/auth/guards/jwt",{"_index":672,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkGuard.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt",{"_index":696,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":721,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:12",{"_index":723,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:25",{"_index":724,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/communication/communication.module.ts",{"_index":574,"title":{},"body":{"modules/CommunicationModule.html":{}}}],["src/communication/email.service.ts",{"_index":622,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/communication/email.service.ts:11",{"_index":625,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/communication/email.service.ts:18",{"_index":631,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/communication/email.service.ts:37",{"_index":627,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/communication/email.service.ts:9",{"_index":633,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/communication/email_templates.enum.ts",{"_index":947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/filters/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":655,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:20",{"_index":659,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:26",{"_index":661,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":670,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/lib/base.entity.ts",{"_index":551,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/lib/base.entity.ts:14",{"_index":559,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/base.entity.ts:21",{"_index":563,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/base.entity.ts:7",{"_index":561,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/lib/database_logger.ts",{"_index":581,"title":{},"body":{"classes/DatabaseLogger.html":{},"coverage.html":{}}}],["src/lib/database_logger.ts:13",{"_index":600,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["src/lib/database_logger.ts:19",{"_index":603,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["src/lib/database_logger.ts:23",{"_index":605,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["src/lib/database_logger.ts:27",{"_index":598,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["src/lib/database_logger.ts:31",{"_index":608,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["src/lib/database_logger.ts:35",{"_index":595,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["src/lib/database_logger.ts:47",{"_index":610,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["src/lib/database_logger.ts:7",{"_index":592,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["src/lib/database_logger.ts:8",{"_index":590,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["src/logging.ts",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":893,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/app_logger.middleware.ts",{"_index":80,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"coverage.html":{}}}],["src/middleware/app_logger.middleware.ts:7",{"_index":88,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["src/middleware/app_logger.middleware.ts:9",{"_index":85,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["src/migrations/1693507040444",{"_index":762,"title":{},"body":{"classes/Somename1693507040444.html":{},"coverage.html":{}}}],["src/users/dto/create",{"_index":576,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts",{"_index":800,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts:11",{"_index":804,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:15",{"_index":807,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:20",{"_index":802,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/dto/user.dto.ts:7",{"_index":806,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/enums/permissions.enum.ts",{"_index":949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/users/user.entity.ts",{"_index":811,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:11",{"_index":816,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/user.entity.ts:17",{"_index":817,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/user.entity.ts:21",{"_index":813,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/users/user.module.ts",{"_index":826,"title":{},"body":{"modules/UserModule.html":{}}}],["src/users/user.profile.ts",{"_index":832,"title":{},"body":{"injectables/UserProfile.html":{},"coverage.html":{}}}],["src/users/user.profile.ts:14",{"_index":834,"title":{},"body":{"injectables/UserProfile.html":{}}}],["src/users/user.profile.ts:9",{"_index":833,"title":{},"body":{"injectables/UserProfile.html":{}}}],["src/users/user.repository.ts",{"_index":837,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{}}}],["src/users/user.repository.ts:6",{"_index":841,"title":{},"body":{"injectables/UserRepository.html":{}}}],["src/users/user.service.ts",{"_index":846,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/user.service.ts:10",{"_index":851,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:16",{"_index":856,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:22",{"_index":858,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/user.service.ts:28",{"_index":853,"title":{},"body":{"injectables/UserService.html":{}}}],["ssl",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["stack",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":959,"title":{"index.html":{}},"body":{}}],["statements",{"_index":866,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["status",{"_index":1002,"title":{},"body":{"index.html":{}}}],["statuscode",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{}}}],["statusmessage",{"_index":100,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["strategy",{"_index":703,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["strategyinitializer",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":72,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AppRuntimeConfig.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"interfaces/JwtConfig.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stringifyparameters",{"_index":588,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["stringifyparameters(parameters",{"_index":609,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["style",{"_index":1085,"title":{},"body":{"index.html":{}}}],["sub",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"classes/RefreshTokenPayload.html":{},"classes/TokenPayloadDto.html":{}}}],["subject",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["success.dto",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["success.dto.ts",{"_index":536,"title":{},"body":{"classes/AuthSuccessDto.html":{},"coverage.html":{}}}],["success.dto.ts:6",{"_index":541,"title":{},"body":{"classes/AuthSuccessDto.html":{}}}],["success.dto.ts:7",{"_index":542,"title":{},"body":{"classes/AuthSuccessDto.html":{}}}],["success.dto.ts:8",{"_index":543,"title":{},"body":{"classes/AuthSuccessDto.html":{}}}],["such",{"_index":967,"title":{},"body":{"index.html":{}}}],["super",{"_index":688,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["super(mapper",{"_index":441,"title":{},"body":{"injectables/AuthProfile.html":{},"injectables/UserProfile.html":{}}}],["super(userentity",{"_index":844,"title":{},"body":{"injectables/UserRepository.html":{}}}],["super.canactivate(context",{"_index":693,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1092,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":1063,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1220,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":982,"title":{},"body":{"index.html":{}}}],["system",{"_index":968,"title":{},"body":{"index.html":{}}}],["table",{"_index":774,"title":{},"body":{"classes/Somename1693507040444.html":{},"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":1184,"title":{},"body":{"index.html":{}}}],["target.sub",{"_index":446,"title":{},"body":{"injectables/AuthProfile.html":{}}}],["technical",{"_index":960,"title":{},"body":{"index.html":{}}}],["template",{"_index":654,"title":{},"body":{"injectables/EmailService.html":{}}}],["templateid",{"_index":641,"title":{},"body":{"injectables/EmailService.html":{}}}],["templatename",{"_index":628,"title":{},"body":{"injectables/EmailService.html":{}}}],["templates",{"_index":266,"title":{},"body":{"interfaces/AppRuntimeConfig.html":{},"interfaces/JwtConfig.html":{},"interfaces/PgsqlDbConfig.html":{},"interfaces/SendGridConfig.html":{},"miscellaneous/variables.html":{}}}],["terminus",{"_index":992,"title":{},"body":{"index.html":{}}}],["terminusmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":1078,"title":{},"body":{"index.html":{}}}],["test/.../jest",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/jest",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tested",{"_index":1105,"title":{},"body":{"index.html":{}}}],["testenvironment",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":1082,"title":{},"body":{"index.html":{}}}],["testregex",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thankfully",{"_index":1176,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":1098,"title":{},"body":{"index.html":{}}}],["things",{"_index":1172,"title":{},"body":{"index.html":{}}}],["this.appruntimeconfig",{"_index":611,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.appruntimeconfig.logsql",{"_index":614,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.authservice.generateauthenticatedtokenbundleasync(userdto",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshidtokenasync(id",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.requestemailmagicloginasync(email",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.classmapper.map(payload",{"_index":727,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.classmapper.mapasync(createdto",{"_index":861,"title":{},"body":{"injectables/UserService.html":{}}}],["this.classmapper.mapasync(userentity",{"_index":860,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createidtokenpayload(userdto",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createrefreshtokenasync(userdto.id",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createtokenformagiclinkasync(userdto",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.emailservice.sendemailasync(userdto.email",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.generateauthenticatedtokenbundleasync(user",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getresponsemessage(exception",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.gettemplateidbyname(templatename",{"_index":642,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.healthcheckservice.check",{"_index":667,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtconfig",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtconfig.idtokenexpiration",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtconfig.idtokensecret",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtconfig.magiclinktokenexpiration",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtconfig.magiclinktokensecret",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtconfig.refreshidtokenexpiration",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtconfig.refreshidtokensecret",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync(tokenpayload",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.debug(message",{"_index":619,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.logger.error",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.error(`${query",{"_index":617,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.logger.error(message",{"_index":105,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["this.logger.log(`${query",{"_index":615,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.logger.log(`sending",{"_index":645,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.logger.log(message",{"_index":108,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"classes/DatabaseLogger.html":{}}}],["this.logger.warn(`time",{"_index":618,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.logger.warn(message",{"_index":107,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"classes/DatabaseLogger.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":690,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.repository.findoneby",{"_index":859,"title":{},"body":{"injectables/UserService.html":{}}}],["this.repository.save(userentity",{"_index":862,"title":{},"body":{"injectables/UserService.html":{}}}],["this.sendgridconfig",{"_index":636,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.sendgridconfig.senderemail",{"_index":640,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.sendgridconfig.templates[templatename",{"_index":652,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.sendloginemailasync(user",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.stringifyparameters(parameters",{"_index":616,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["this.typeormhealthindicator.pingcheck('database",{"_index":668,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.userservice.createasync",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyemailasync(email",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyidasync(id",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":1107,"title":{},"body":{"index.html":{}}}],["though",{"_index":963,"title":{},"body":{"index.html":{}}}],["through",{"_index":1146,"title":{},"body":{"index.html":{}}}],["throw",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{}}}],["time",{"_index":606,"title":{},"body":{"classes/DatabaseLogger.html":{},"index.html":{}}}],["timestamp",{"_index":556,"title":{},"body":{"classes/BaseEntity.html":{}}}],["timestamp(3",{"_index":779,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["timonmasberg/automapper",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthProfile.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["token",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenPayload.html":{},"classes/TokenPayloadDto.html":{},"coverage.html":{},"index.html":{}}}],["tokenpayload",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenpayloaddto",{"_index":431,"title":{"classes/TokenPayloadDto.html":{}},"body":{"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/TokenPayloadDto.html":{},"coverage.html":{}}}],["tokens",{"_index":1150,"title":{},"body":{"index.html":{}}}],["transform",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":1117,"title":{},"body":{"index.html":{}}}],["transports",{"_index":892,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["transports.combinedfile",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.console",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.errorfile",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.logtail",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"entities/UserEntity.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true})@automap",{"_index":815,"title":{},"body":{"entities/UserEntity.html":{}}}],["try",{"_index":620,"title":{},"body":{"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{}}}],["trying",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["ts",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":997,"title":{},"body":{"index.html":{}}}],["type",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"interfaces/AppRuntimeConfig.html":{},"controllers/AuthController.html":{},"injectables/AuthProfile.html":{},"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"classes/AuthenticatedUserDto.html":{},"classes/BaseEntity.html":{},"classes/CreateUserDto.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfig.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/LocalUserDto.html":{},"interfaces/PgsqlDbConfig.html":{},"classes/RefreshTokenPayload.html":{},"classes/RefreshUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"interfaces/SendGridConfig.html":{},"classes/Somename1693507040444.html":{},"classes/TokenPayloadDto.html":{},"classes/UserDto.html":{},"entities/UserEntity.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":71,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["typeorm",{"_index":568,"title":{},"body":{"classes/BaseEntity.html":{},"classes/DatabaseLogger.html":{},"classes/Somename1693507040444.html":{},"entities/UserEntity.html":{},"injectables/UserRepository.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm.config.ts",{"_index":900,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm:generate",{"_index":1182,"title":{},"body":{"index.html":{}}}],["typeormhealthindicator",{"_index":664,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormlogger",{"_index":582,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["typeormmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":831,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forrootasync",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["t|j)s",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":1216,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["under",{"_index":1072,"title":{},"body":{"index.html":{}}}],["uniform",{"_index":1084,"title":{},"body":{"index.html":{}}}],["unit.config.ts",{"_index":899,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":613,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["unlicensed",{"_index":1231,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["unprocessableentityexception(formattederrors",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["up",{"_index":766,"title":{},"body":{"classes/Somename1693507040444.html":{},"index.html":{}}}],["up(queryrunner",{"_index":771,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["updatedat",{"_index":553,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Somename1693507040444.html":{}}}],["updatedatecolumn",{"_index":567,"title":{},"body":{"classes/BaseEntity.html":{}}}],["updatedatecolumn({type",{"_index":562,"title":{},"body":{"classes/BaseEntity.html":{}}}],["url",{"_index":94,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"index.html":{}}}],["usage",{"_index":1058,"title":{},"body":{"index.html":{}}}],["use",{"_index":81,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"index.html":{}}}],["use(request",{"_index":82,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["useclass",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthSuccessDto.html":{},"classes/RequestMagicLinkDto.html":{},"index.html":{}}}],["usefactory",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtmagiclinkguard",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/RequestMagicLinkDto.html":{},"index.html":{}}}],["user.dto",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthProfile.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":545,"title":{},"body":{"classes/AuthenticatedUserDto.html":{},"classes/CreateUserDto.html":{},"classes/LocalUserDto.html":{},"classes/RefreshUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":739,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["user.dto.ts:13",{"_index":738,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["user.dto.ts:16",{"_index":736,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["user.dto.ts:2",{"_index":548,"title":{},"body":{"classes/AuthenticatedUserDto.html":{},"classes/RefreshUserDto.html":{}}}],["user.dto.ts:20",{"_index":734,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["user.dto.ts:23",{"_index":735,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["user.dto.ts:26",{"_index":741,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["user.dto.ts:29",{"_index":740,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["user.dto.ts:32",{"_index":737,"title":{},"body":{"classes/LocalUserDto.html":{}}}],["user.dto.ts:4",{"_index":547,"title":{},"body":{"classes/AuthenticatedUserDto.html":{}}}],["user.dto.ts:6",{"_index":549,"title":{},"body":{"classes/AuthenticatedUserDto.html":{}}}],["user.dto.ts:7",{"_index":578,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LocalUserDto.html":{}}}],["user.dto.ts:8",{"_index":546,"title":{},"body":{"classes/AuthenticatedUserDto.html":{}}}],["user.email",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.firstname",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.lastname",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.permissions",{"_index":728,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user.service",{"_index":830,"title":{},"body":{"modules/UserModule.html":{}}}],["user_entity",{"_index":775,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["useragent",{"_index":96,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{}}}],["userdto",{"_index":359,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserDto.html":{},"injectables/UserProfile.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userdto.email",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto.firstname",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto.id",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto.lastname",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity",{"_index":809,"title":{"entities/UserEntity.html":{}},"body":{"entities/UserEntity.html":{},"modules/UserModule.html":{},"injectables/UserProfile.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userid",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthSuccessDto.html":{},"index.html":{}}}],["usermodule",{"_index":123,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["userprofile",{"_index":824,"title":{"injectables/UserProfile.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserProfile.html":{},"coverage.html":{},"overview.html":{}}}],["userrepository",{"_index":825,"title":{"injectables/UserRepository.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["users/user.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["userservice",{"_index":457,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":1119,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1012,"title":{},"body":{"index.html":{}}}],["utilized",{"_index":1169,"title":{},"body":{"index.html":{}}}],["utilizes",{"_index":991,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":776,"title":{},"body":{"classes/Somename1693507040444.html":{},"dependencies.html":{}}}],["uuid_generate_v4",{"_index":778,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["v1/health",{"_index":999,"title":{},"body":{"index.html":{}}}],["v1/health/q",{"_index":1005,"title":{},"body":{"index.html":{}}}],["validate",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":699,"title":{},"body":{"injectables/JwtMagicLinkStrategy.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["validated",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["validates",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationerror",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":580,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LocalUserDto.html":{},"classes/RequestMagicLinkDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["value",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AppLoggerMiddleware.html":{},"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{},"classes/Somename1693507040444.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1233,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":782,"title":{},"body":{"classes/Somename1693507040444.html":{}}}],["verbose",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HealthController.html":{},"index.html":{},"properties.html":{}}}],["versioning",{"_index":977,"title":{},"body":{"index.html":{}}}],["versions",{"_index":1037,"title":{},"body":{"index.html":{}}}],["versus",{"_index":1204,"title":{},"body":{"index.html":{}}}],["via",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["void",{"_index":86,"title":{},"body":{"injectables/AppLoggerMiddleware.html":{},"modules/AppModule.html":{},"classes/DatabaseLogger.html":{}}}],["warn",{"_index":594,"title":{},"body":{"classes/DatabaseLogger.html":{}}}],["way",{"_index":1122,"title":{},"body":{"index.html":{}}}],["whitelist",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["whole",{"_index":1147,"title":{},"body":{"index.html":{}}}],["winston",{"_index":928,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["winston.format.align",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.colorize",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.errors",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.json",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf((info",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.splat",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transport",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstondailyrotatefile",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonmodule.createlogger",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wish",{"_index":1018,"title":{},"body":{"index.html":{}}}],["within",{"_index":971,"title":{},"body":{"index.html":{}}}],["without",{"_index":1200,"title":{},"body":{"index.html":{}}}],["work",{"_index":1095,"title":{},"body":{"index.html":{}}}],["working",{"_index":1071,"title":{},"body":{"index.html":{}}}],["worth",{"_index":1093,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":537,"title":{},"body":{"classes/AuthSuccessDto.html":{},"index.html":{}}}],["x",{"_index":1142,"title":{},"body":{"index.html":{}}}],["yellow",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":601,"title":{},"body":{"classes/DatabaseLogger.html":{},"injectables/EmailService.html":{}}}],["yyyy",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommunicationModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getResponseMessage\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/filters/all-exceptions.filter.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AllExceptionsFilter.name)\n                    \n                \n                    \n                        \n                                Defined in src/filters/all-exceptions.filter.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Error, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/all-exceptions.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  private readonly logger = new Logger(AllExceptionsFilter.name);\n\n  catch(exception: Error, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const respObj = this.getResponseMessage(exception, request);\n    response.status(respObj.statusCode).json(respObj);\n  }\n\n  getResponseMessage = (exception: Error, request: any): any => {\n    const { name: errorType } = exception;\n\n    if (exception instanceof HttpException) {\n      const res: any = exception.getResponse();\n\n      this.logger.error(\n        JSON.stringify({\n          error: exception.name,\n          exception: exception.message,\n          stack: exception.stack,\n        }),\n      );\n\n      return {\n        statusCode: res.statusCode ?? 500,\n        path: request.url,\n        errorType: res.error || errorType,\n        errorMessage: res.message,\n      };\n    } else if (typeof exception === 'string') {\n      this.logger.error(\n        JSON.stringify({\n          error: exception,\n        }),\n      );\n      return {\n        statusCode: exception['statusCode'] ?? HttpStatus.INTERNAL_SERVER_ERROR,\n        path: request.url,\n        errorType,\n        exception,\n      };\n    } else {\n      this.logger.error(\n        JSON.stringify({\n          error: exception.name,\n          exception: exception.message,\n          stack: exception.stack,\n        }),\n      );\n\n      return {\n        statusCode: exception['statusCode'] ?? HttpStatus.INTERNAL_SERVER_ERROR,\n        path: request.url,\n        errorType,\n        exception,\n      };\n    }\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppLoggerMiddleware.html":{"url":"injectables/AppLoggerMiddleware.html","title":"injectable - AppLoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppLoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/app_logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/app_logger.middleware.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AppLoggerMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/middleware/app_logger.middleware.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\n\nimport { NextFunction, Request, Response } from 'express';\n\n@Injectable()\nexport class AppLoggerMiddleware implements NestMiddleware {\n  private readonly logger = new Logger(AppLoggerMiddleware.name);\n\n  use(request: Request, response: Response, next: NextFunction): void {\n    const { ip, method, baseUrl: url, body } = request;\n    const userAgent = request.get('user-agent') || '';\n\n    response.on('close', () => {\n      const { statusCode, statusMessage } = response;\n      const contentLength = response.get('content-length');\n\n      const message = JSON.stringify({\n        method,\n        url,\n        statusCode,\n        statusMessage,\n        userAgent,\n        ip,\n        contentLength,\n        body,\n      });\n\n      if (statusCode >= 500) {\n        return this.logger.error(message);\n      }\n\n      if (statusCode >= 400) {\n        return this.logger.warn(message);\n      }\n\n      return this.logger.log(message);\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCommunicationModule\n\nCommunicationModule\n\nAppModule -->\n\nCommunicationModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CommunicationModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { PGSQL_CONFIG, PgsqlDbConfig, configuration } from '@app/app.config';\nimport { AuthController } from '@app/auth/auth.controller';\nimport { JwtAuthGuard } from '@app/auth/guards/jwt-auth.guard';\nimport { AllExceptionsFilter } from '@app/filters/all-exceptions.filter';\nimport HealthModule from '@app/health/health.module';\nimport { DatabaseLogger } from '@app/lib/database_logger';\nimport { AppLoggerMiddleware } from '@app/middleware/app_logger.middleware';\nimport { classes } from '@automapper/classes';\nimport {\n  MiddlewareConsumer,\n  Module,\n  UnprocessableEntityException,\n  ValidationError,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER, APP_GUARD, APP_PIPE } from '@nestjs/core';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AutomapperModule } from '@timonmasberg/automapper-nestjs';\nimport { AuthModule } from './auth/auth.module';\nimport { CommunicationModule } from './communication/communication.module';\nimport { HealthController } from './health/health.controller';\nimport { UserModule } from './users/user.module';\n\n@Module({\n  imports: [\n    AutomapperModule.forRoot({\n      strategyInitializer: classes(),\n    }),\n    ConfigModule.forRoot({\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n      isGlobal: true,\n      load: [configuration],\n    }),\n    TypeOrmModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        const pgsqlConfig = configService.get(PGSQL_CONFIG);\n        return {\n          logger: new DatabaseLogger(configService),\n          type: 'postgres',\n          host: pgsqlConfig.host,\n          port: pgsqlConfig.port,\n          username: pgsqlConfig.appRuntimeUsername,\n          password: pgsqlConfig.appRuntimeUserPassword,\n          database: pgsqlConfig.dbName,\n          autoLoadEntities: true,\n          ssl: pgsqlConfig.shouldUseSsl,\n          extra: {\n            ssl: {\n              rejectUnauthorized: pgsqlConfig.rejectUnauthorized,\n            },\n          },\n        };\n      },\n    }),\n    TerminusModule,\n    UserModule,\n    AuthModule,\n    CommunicationModule,\n    HealthModule,\n  ],\n  controllers: [AuthController, HealthController],\n  providers: [\n    {\n      provide: APP_PIPE,\n      useValue: new ValidationPipe({\n        transform: true,\n        whitelist: true,\n        exceptionFactory: (errors): any => {\n          const formattedErrors = formatErrors(errors);\n          return new UnprocessableEntityException(formattedErrors);\n        },\n      }),\n    },\n    {\n      provide: APP_FILTER,\n      useValue: new AllExceptionsFilter(),\n    },\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    // {\n    //   provide: APP_INTERCEPTOR,\n    //   useClass: RlsInterceptor,\n    // },\n  ],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer): void {\n    consumer.apply(AppLoggerMiddleware).forRoutes('*');\n  }\n}\n\nconst formatErrors = (errors: ValidationError[], parentName = ''): Array => {\n  const formattedErrors = [];\n\n  for (const error of errors) {\n    if (Array.isArray(error.value) && !error.constraints) {\n      formattedErrors.push(formatErrors(error.children, error.property));\n    } else if (Array.isArray(error.children) && error.children.length) {\n      const ob = { name: `${parentName}.${error.property}`, errors: [] };\n      ob.errors = formatErrors(error.children);\n      formattedErrors.push(ob);\n    } else {\n      const err = {};\n      err[error.property] = Object.keys(error.constraints).map((p) => error.constraints[p]);\n      formattedErrors.push(err);\n    }\n  }\n\n  return formattedErrors.flat();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppRuntimeConfig.html":{"url":"interfaces/AppRuntimeConfig.html","title":"interface - AppRuntimeConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppRuntimeConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            appDomain\n                                        \n                                \n                                \n                                        \n                                            appPort\n                                        \n                                \n                                \n                                        \n                                            logserviceToken\n                                        \n                                \n                                \n                                        \n                                            logSQL\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appDomain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appDomain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appPort\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appPort:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logserviceToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logserviceToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logSQL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logSQL:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const APP_RUNTIME_CONFIG = 'appRuntime';\nexport const JWT_CONFIG = 'jwt';\nexport const SENDGRID_CONFIG = 'sendgrid';\nexport const PGSQL_CONFIG = 'pgsql';\n\nexport interface AppRuntimeConfig {\n  appDomain: string;\n  appPort: number;\n  logserviceToken: string;\n  logSQL: boolean;\n}\n\nexport interface JwtConfig {\n  secret: string;\n  audience: string;\n  issuer: string;\n  expiration: string;\n  idTokenSecret: string;\n  idTokenExpiration: string;\n  refreshIdTokenSecret: string;\n  refreshIdTokenExpiration: string;\n  magicLinkTokenSecret: string;\n  magicLinkTokenExpiration: string;\n}\n\nexport interface SendGridConfig {\n  apiKey: string;\n  templates: { [key: string]: string };\n  senderEmail: string;\n}\n\nexport interface PgsqlDbConfig {\n  appRuntimeUsername: string;\n  appRuntimeUserPassword: string;\n  dbName: string;\n  host: string;\n  port: number;\n  shouldUseSsl: boolean;\n  rejectUnauthorized: boolean;\n  dropDb: boolean;\n  runMigrations: boolean;\n}\n\nexport const configuration = () => ({\n  appRuntime: {\n    appDomain: process.env.APP_DOMAIN,\n    appPort: process.env.APP_PORT,\n    logserviceToken: process.env.LOGSERVICE_TOKEN,\n    logSQL: process.env.LOG_SQL_STATEMENTS,\n  },\n  jwt: {\n    audience: process.env.JWT_AUD,\n    issuer: process.env.JWT_ISS,\n    secret: process.env.JWT_SECRET,\n    expiration: process.env.JWT_EXPIRATION,\n    idTokenSecret: process.env.JWT_ID_TOKEN_SECRET,\n    idTokenExpiration: process.env.JWT_ID_TOKEN_EXPIRATION,\n    refreshIdTokenSecret: process.env.JWT_REFRESH_ID_TOKEN_SECRET,\n    refreshIdTokenExpiration: process.env.JWT_REFRESH_ID_TOKEN_EXPIRATION,\n    magicLinkTokenSecret: process.env.JWT_MAGICLINK_SECRET,\n    magicLinkTokenExpiration: process.env.JWT_MAGICLINK_EXPIRATION,\n  },\n  sendgrid: {\n    apiKey: process.env.SENDGRID_API_KEY,\n    templates: {\n      magicLinkEmailId: process.env.SENDGRID_SENDGRID_MAGIC_LINK_EMAIL_ID,\n    },\n    senderEmail: process.env.SENDGRID_SENDER_EMAIL,\n  },\n  pgsql: {\n    host: process.env.POSTGRES_HOST,\n    appRuntimeUsername: process.env.APP_RUNTIME_USER,\n    appRuntimeUserPassword: process.env.APP_RUNTIME_USER_PASSWORD,\n    dbName: process.env.POSTGRES_DB,\n    port: process.env.POSTGRES_PORT,\n    shouldUseSsl: process.env.POSTGRES_SHOULD_USE_SSL,\n    rejectUnauthorized: process.env.POSTGRES_REJECT_UNAUTHORIZED,\n    dropDb: process.env.POSTGRES_DROP_DB,\n    runMigrations: process.env.POSTGRES_RUN_MIGRATIONS,\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                magicLinkCallBack\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                refreshIdToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                requestEmailLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        magicLinkCallBack\n                        \n                    \n                \n            \n            \n                \n                    \n                    magicLinkCallBack(undefined: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@ApiUnauthorizedResponse()@ApiQuery({name: 'token', description: 'The token that is used to get the access token (idToken). This token is sent to the user via email'})@ApiResponse({type: AuthSuccessDto})@UseGuards(JwtMagicLinkGuard)@Get('/magiclink-callback')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        refreshIdToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshIdToken(undefined: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@ApiUnauthorizedResponse()@ApiQuery({name: 'token', description: 'The refresh token that is used to get a new access token (idToken).'})@UseGuards(JwtRefreshGuard)@Get('/refresh-id-token')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        requestEmailLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestEmailLogin(undefined: RequestMagicLinkDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.NO_CONTENT)@ApiQuery({name: 'email', description: 'The email of the application user that is trying to log in'})@Get('/request-email-login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RequestMagicLinkDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { AuthService } from '@app/auth/auth.service';\nimport { Public } from '@app/auth/decorators/public.decorator';\nimport { AuthSuccessDto } from '@app/auth/dto/auth-success.dto';\nimport { AuthenticatedUserDto } from '@app/auth/dto/authenticated-user.dto';\nimport { RefreshUserDto } from '@app/auth/dto/refresh-user.dto';\nimport { RequestMagicLinkDto } from '@app/auth/dto/request-magic-link.dto';\nimport { JwtMagicLinkGuard } from '@app/auth/guards/jwt-magic-link.guard';\nimport { JwtRefreshGuard } from '@app/auth/guards/jwt-refresh.guard';\nimport { UserDto } from '@app/users/dto/user.dto';\nimport { Controller, Get, HttpCode, HttpStatus, Query, Request, UseGuards } from '@nestjs/common';\nimport { ApiQuery, ApiResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\n\n@ApiTags('Authentication')\n@Controller({\n  path: 'auth',\n  version: '1',\n})\n@Public()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiQuery({\n    name: 'email',\n    description: 'The email of the application user that is trying to log in',\n  })\n  @Get('/request-email-login')\n  async requestEmailLogin(@Query() { email }: RequestMagicLinkDto): Promise {\n    await this.authService.requestEmailMagicLoginAsync(email);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @ApiUnauthorizedResponse()\n  @ApiQuery({\n    name: 'token',\n    description: 'The token that is used to get the access token (idToken). This token is sent to the user via email',\n  })\n  @ApiResponse({ type: AuthSuccessDto })\n  @UseGuards(JwtMagicLinkGuard)\n  @Get('/magiclink-callback')\n  async magicLinkCallBack(@Request() { user }: { user: AuthenticatedUserDto }): Promise {\n    const userDto: UserDto = {\n      id: user.id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n    };\n\n    return await this.authService.generateAuthenticatedTokenBundleAsync(userDto);\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @ApiUnauthorizedResponse()\n  @ApiQuery({\n    name: 'token',\n    description: 'The refresh token that is used to get a new access token (idToken).',\n  })\n  @UseGuards(JwtRefreshGuard)\n  @Get('/refresh-id-token')\n  async refreshIdToken(@Request() { user: { id } }: { user: RefreshUserDto }): Promise {\n    return this.authService.refreshIdTokenAsync(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommunicationModule\n\nCommunicationModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommunicationModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtMagicLinkStrategy\n\nJwtMagicLinkStrategy\n\nAuthModule -->\n\nJwtMagicLinkStrategy->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtMagicLinkStrategy\n                        \n                        \n                            JwtRefreshStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommunicationModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { JWT_CONFIG, JwtConfig } from '@app/app.config';\nimport { JwtMagicLinkStrategy } from '@app/auth/strategies/jwt-magiclink.strategy';\nimport { JwtRefreshStrategy } from '@app/auth/strategies/jwt-refresh.strategy';\nimport { JwtStrategy } from '@app/auth/strategies/jwt.strategy';\nimport { CommunicationModule } from '@app/communication/communication.module';\nimport { UserModule } from '@app/users/user.module';\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\n\n@Module({\n  imports: [\n    UserModule,\n    CommunicationModule,\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => {\n        const jwtConfig = configService.get(JWT_CONFIG);\n        return {\n          signOptions: {\n            issuer: jwtConfig.issuer,\n            audience: jwtConfig.audience,\n          },\n        };\n      },\n    }),\n  ],\n  providers: [AuthService, JwtMagicLinkStrategy, JwtRefreshStrategy, JwtStrategy],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthProfile.html":{"url":"injectables/AuthProfile.html","title":"injectable - AuthProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.profile.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AutomapperProfile\n            \n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapper: Mapper)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.profile.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                    Mapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profile\n                    \n                \n\n                \n                    \n                        getprofile()\n                    \n                \n                            \n                                \n                                    Defined in src/auth/auth.profile.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { LocalUserDto } from '@app/auth/dto/local-user.dto';\nimport { TokenPayloadDto } from '@app/auth/dto/token-payload.dto';\nimport { createMap, forMember, mapFrom, Mapper, MappingProfile } from '@automapper/core';\nimport { Injectable } from '@nestjs/common';\nimport { AutomapperProfile, InjectMapper } from '@timonmasberg/automapper-nestjs';\n\n@Injectable()\nexport class AuthProfile extends AutomapperProfile {\n  constructor(@InjectMapper() mapper: Mapper) {\n    super(mapper);\n  }\n\n  override get profile(): MappingProfile {\n    return (mapper) => {\n      createMap(\n        mapper,\n        TokenPayloadDto,\n        LocalUserDto,\n        forMember(\n          (dest) => dest.applicationUserId,\n          mapFrom((target) => target.sub),\n        ),\n      );\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                jwtConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createIdTokenPayload\n                            \n                            \n                                    Private\n                                    Async\n                                createRefreshTokenAsync\n                            \n                            \n                                    Async\n                                createTokenForMagicLinkAsync\n                            \n                            \n                                    Async\n                                generateAuthenticatedTokenBundleAsync\n                            \n                            \n                                    Async\n                                refreshIdTokenAsync\n                            \n                            \n                                    Async\n                                requestEmailMagicLoginAsync\n                            \n                            \n                                    Private\n                                    Async\n                                sendLoginEmailAsync\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, configService: ConfigService, emailService: EmailService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createIdTokenPayload\n                        \n                    \n                \n            \n            \n                \n                    \n                    createIdTokenPayload(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TokenPayloadDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        createRefreshTokenAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    createRefreshTokenAsync(applicationUserId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    applicationUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTokenForMagicLinkAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTokenForMagicLinkAsync(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateAuthenticatedTokenBundleAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateAuthenticatedTokenBundleAsync(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshIdTokenAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshIdTokenAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        requestEmailMagicLoginAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    requestEmailMagicLoginAsync(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n                    Requests for magic login to be sent to the user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The email of the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        sendLoginEmailAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendLoginEmailAsync(userDto: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:68\n                \n            \n\n\n            \n                \n                    Validates if the user with the requested data exists.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe email of the user to validate\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The validated User.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        jwtConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { JWT_CONFIG, JwtConfig } from '@app/app.config';\nimport { AuthSuccessDto } from '@app/auth/dto/auth-success.dto';\nimport { RefreshTokenPayload } from '@app/auth/dto/refresh-token-payload.dto';\nimport { TokenPayloadDto } from '@app/auth/dto/token-payload.dto';\nimport { EmailService } from '@app/communication/email.service';\nimport { EmailTemplate } from '@app/communication/email_templates.enum';\nimport { UserDto } from '@app/users/dto/user.dto';\nimport { Permission } from '@app/users/enums/permissions.enum';\nimport { UserService } from '@app/users/user.service';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  private readonly jwtConfig: JwtConfig;\n\n  constructor(\n    private userService: UserService,\n    private readonly jwtService: JwtService,\n    configService: ConfigService,\n    private emailService: EmailService,\n  ) {\n    this.jwtConfig = configService.get(JWT_CONFIG);\n  }\n\n  /**\n   * Requests for magic login to be sent to the user.\n   * @param {string} email : The email of the user.\n   */\n  async requestEmailMagicLoginAsync(email: string): Promise {\n    let user = await this.userService.findOneByEmailAsync(email);\n\n    if (!user) {\n      user = await this.userService.createAsync({ email: email });\n    }\n\n    await this.sendLoginEmailAsync(user);\n\n    return;\n  }\n\n  private async sendLoginEmailAsync(userDto: UserDto): Promise {\n    const loginToken = await this.createTokenForMagicLinkAsync(userDto);\n\n    const magicLink = `/auth/magiclink-callback/?token=${loginToken}`;\n    await this.emailService.sendEmailAsync(userDto.email, EmailTemplate.MagicLinkEmail, {\n      magicLink,\n    });\n  }\n\n  async createTokenForMagicLinkAsync(userDto: UserDto): Promise {\n    return await this.jwtService.signAsync(\n      { ...userDto },\n      {\n        subject: userDto.id ?? '',\n        secret: this.jwtConfig.magicLinkTokenSecret,\n        expiresIn: this.jwtConfig.magicLinkTokenExpiration,\n      },\n    );\n  }\n\n  /**\n   * Validates if the user with the requested data exists.\n   * @param {string} email - The email of the user to validate\n   * @returns {UserDto} The validated User.\n   */\n  async validateUser(email: string): Promise {\n    const user = await this.userService.findOneByEmailAsync(email);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n\n  async generateAuthenticatedTokenBundleAsync(userDto: UserDto): Promise {\n    const tokenPayload = this.createIdTokenPayload(userDto);\n    const idToken = await this.jwtService.signAsync(tokenPayload, {\n      expiresIn: this.jwtConfig.idTokenExpiration,\n      secret: this.jwtConfig.idTokenSecret,\n    });\n    const refreshToken = await this.createRefreshTokenAsync(userDto.id);\n\n    return { idToken, refreshToken, userId: userDto.id };\n  }\n\n  private createIdTokenPayload(userDto: UserDto): TokenPayloadDto {\n    const p1: TokenPayloadDto = {\n      email: userDto.email,\n      sub: userDto.id,\n      name: userDto.firstName + ' ' + userDto.lastName,\n      given_name: userDto.firstName,\n      family_name: userDto.lastName,\n      permissions: [] as Permission[],\n      roles: [] as string[],\n    };\n\n    return p1;\n  }\n\n  async refreshIdTokenAsync(id: string): Promise {\n    const user = await this.userService.findOneByIdAsync(id);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return await this.generateAuthenticatedTokenBundleAsync(user);\n  }\n\n  private async createRefreshTokenAsync(applicationUserId: string): Promise {\n    const payload: RefreshTokenPayload = {\n      sub: applicationUserId,\n    };\n    return await this.jwtService.signAsync(payload, {\n      secret: this.jwtConfig.refreshIdTokenSecret,\n      expiresIn: this.jwtConfig.refreshIdTokenExpiration,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthSuccessDto.html":{"url":"classes/AuthSuccessDto.html","title":"class - AuthSuccessDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthSuccessDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-success.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This class is a wrapper dto that is sent after authentication.\nThe idToken is used to get an accessToken\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                idToken\n                            \n                            \n                                refreshToken\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        idToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-success.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-success.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth-success.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthSuccessDto {\n  idToken: string;\n  refreshToken: string;\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticatedUserDto.html":{"url":"classes/AuthenticatedUserDto.html","title":"class - AuthenticatedUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticatedUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/authenticated-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/authenticated-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/authenticated-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/authenticated-user.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/authenticated-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthenticatedUserDto {\n  id?: string;\n\n  firstName: string;\n\n  lastName: string;\n\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', precision: 3})@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/base.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', precision: 3})@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/lib/base.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { CreateDateColumn, PrimaryGeneratedColumn, UpdateDateColumn } from 'typeorm';\n\nexport class BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  @AutoMap()\n  id: string;\n\n  @CreateDateColumn({\n    type: 'timestamp',\n    precision: 3,\n  })\n  @AutoMap()\n  createdAt?: Date;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n    precision: 3,\n  })\n  @AutoMap()\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommunicationModule.html":{"url":"modules/CommunicationModule.html","title":"module - CommunicationModule","body":"\n                   \n\n\n\n\n    Modules\n    CommunicationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommunicationModule\n\n\n\ncluster_CommunicationModule_providers\n\n\n\ncluster_CommunicationModule_exports\n\n\n\n\nEmailService \n\nEmailService \n\n\n\nCommunicationModule\n\nCommunicationModule\n\nEmailService  -->\n\nCommunicationModule->EmailService \n\n\n\n\n\nEmailService\n\nEmailService\n\nCommunicationModule -->\n\nEmailService->CommunicationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/communication/communication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { EmailService } from '@app/communication/email.service';\nimport { Module } from '@nestjs/common';\n\n@Module({\n  providers: [EmailService],\n  exports: [EmailService],\n})\nexport class CommunicationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { IsEmail } from 'class-validator';\n\nexport class CreateUserDto {\n  @AutoMap()\n  @IsEmail()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseLogger.html":{"url":"classes/DatabaseLogger.html","title":"class - DatabaseLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/database_logger.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        TypeOrmLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                appRuntimeConfig\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                            \n                                logMigration\n                            \n                            \n                                logQuery\n                            \n                            \n                                logQueryError\n                            \n                            \n                                logQuerySlow\n                            \n                            \n                                logSchemaBuild\n                            \n                            \n                                    Private\n                                stringifyParameters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/database_logger.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        appRuntimeConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppRuntimeConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/lib/database_logger.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabaseLogger.name)\n                    \n                \n                    \n                        \n                                Defined in src/lib/database_logger.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(level: \"log\" | \"info\" | \"warn\", message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/database_logger.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                            \"log\" | \"info\" | \"warn\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logMigration\n                        \n                    \n                \n            \n            \n                \nlogMigration(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/database_logger.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logQuery\n                        \n                    \n                \n            \n            \n                \nlogQuery(query: string, parameters?: [])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/database_logger.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logQueryError\n                        \n                    \n                \n            \n            \n                \nlogQueryError(error: string, query: string, parameters?: [])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/database_logger.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logQuerySlow\n                        \n                    \n                \n            \n            \n                \nlogQuerySlow(time: number, query: string, parameters?: [])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/database_logger.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logSchemaBuild\n                        \n                    \n                \n            \n            \n                \nlogSchemaBuild(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/database_logger.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        stringifyParameters\n                        \n                    \n                \n            \n            \n                \n                    \n                    stringifyParameters(parameters?: [])\n                \n            \n\n\n            \n                \n                    Defined in src/lib/database_logger.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parameters\n                                    \n                                            []\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { APP_RUNTIME_CONFIG, AppRuntimeConfig } from '@app/app.config';\nimport { Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Logger as TypeOrmLogger } from 'typeorm';\n\nexport class DatabaseLogger implements TypeOrmLogger {\n  private readonly logger = new Logger(DatabaseLogger.name);\n  private readonly appRuntimeConfig: AppRuntimeConfig;\n\n  constructor(configService: ConfigService) {\n    this.appRuntimeConfig = configService.get(APP_RUNTIME_CONFIG);\n  }\n  logQuery(query: string, parameters?: unknown[]) {\n    if (this.appRuntimeConfig.logSQL) {\n      this.logger.log(`${query} -- Parameters: ${this.stringifyParameters(parameters)}`);\n    }\n  }\n\n  logQueryError(error: string, query: string, parameters?: unknown[]) {\n    this.logger.error(`${query} -- Parameters: ${this.stringifyParameters(parameters)} -- ${error}`);\n  }\n\n  logQuerySlow(time: number, query: string, parameters?: unknown[]) {\n    this.logger.warn(`Time: ${time} -- Parameters: ${this.stringifyParameters(parameters)} -- ${query}`);\n  }\n\n  logMigration(message: string) {\n    this.logger.log(message);\n  }\n\n  logSchemaBuild(message: string) {\n    this.logger.log(message);\n  }\n\n  log(level: 'log' | 'info' | 'warn', message: string) {\n    if (level === 'log') {\n      return this.logger.log(message);\n    }\n    if (level === 'info') {\n      return this.logger.debug(message);\n    }\n    if (level === 'warn') {\n      return this.logger.warn(message);\n    }\n  }\n\n  private stringifyParameters(parameters?: unknown[]) {\n    try {\n      return JSON.stringify(parameters);\n    } catch {\n      return '';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/communication/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                sendGridConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTemplateIdByName\n                            \n                            \n                                    Async\n                                sendEmailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/communication/email.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTemplateIdByName\n                        \n                    \n                \n            \n            \n                \ngetTemplateIdByName(templateName: EmailTemplate)\n                \n            \n\n\n            \n                \n                    Defined in src/communication/email.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateName\n                                    \n                                                EmailTemplate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailAsync(to: string, templateName: EmailTemplate, dynamicTemplateData?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/communication/email.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    templateName\n                                    \n                                                EmailTemplate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dynamicTemplateData\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(EmailService.name)\n                    \n                \n                    \n                        \n                                Defined in src/communication/email.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sendGridConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SendGridConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/communication/email.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { SENDGRID_CONFIG, SendGridConfig } from '@app/app.config';\nimport { EmailTemplate } from '@app/communication/email_templates.enum';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport sgMail from '@sendgrid/mail';\n\n@Injectable()\nexport class EmailService {\n  private readonly logger = new Logger(EmailService.name);\n\n  private readonly sendGridConfig: SendGridConfig;\n\n  constructor(configService: ConfigService) {\n    this.sendGridConfig = configService.get(SENDGRID_CONFIG);\n    sgMail.setApiKey(this.sendGridConfig.apiKey);\n  }\n\n  async sendEmailAsync(\n    to: string,\n    templateName: EmailTemplate,\n    dynamicTemplateData?: { [key: string]: any },\n  ): Promise {\n    const msg = {\n      to: to,\n      from: this.sendGridConfig.senderEmail,\n      templateId: this.getTemplateIdByName(templateName),\n      dynamicTemplateData: dynamicTemplateData,\n    };\n    try {\n      const result = await sgMail.send(msg);\n      this.logger.log(`sending email[${templateName}] returned: ${result[0].statusCode}`);\n    } catch (e) {\n      throw new Error(`Could not send email: ${e}`);\n    }\n  }\n\n  getTemplateIdByName(templateName: EmailTemplate): string {\n    const templateId = this.sendGridConfig.templates[templateName];\n\n    if (!templateId) {\n      throw `Invalid email template ${templateName}`;\n    }\n    return templateId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                check\n                            \n                            \n                                    \n                                    \n                                checkQuick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        checkQuick\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkQuick()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/q')@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Public } from '@app/auth/decorators/public.decorator';\nimport { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { HealthCheck, HealthCheckService, TypeOrmHealthIndicator } from '@nestjs/terminus';\n\n@Public()\n@ApiTags('Health')\n@Controller({\n  path: '/health',\n  version: '1',\n})\nexport class HealthController {\n  constructor(\n    private healthCheckService: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.healthCheckService.check([() => this.typeOrmHealthIndicator.pingCheck('database')]);\n  }\n\n  @Get('/q')\n  @HealthCheck()\n  checkQuick() {\n    return 1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HealthController } from '@app/health/health.controller';\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n  providers: [],\n  exports: [],\n})\nexport default class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt-auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IS_PUBLIC_KEY } from '@app/auth/decorators/public.decorator';\nimport { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConfig.html":{"url":"interfaces/JwtConfig.html","title":"interface - JwtConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            audience\n                                        \n                                \n                                \n                                        \n                                            expiration\n                                        \n                                \n                                \n                                        \n                                            idTokenExpiration\n                                        \n                                \n                                \n                                        \n                                            idTokenSecret\n                                        \n                                \n                                \n                                        \n                                            issuer\n                                        \n                                \n                                \n                                        \n                                            magicLinkTokenExpiration\n                                        \n                                \n                                \n                                        \n                                            magicLinkTokenSecret\n                                        \n                                \n                                \n                                        \n                                            refreshIdTokenExpiration\n                                        \n                                \n                                \n                                        \n                                            refreshIdTokenSecret\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        audience\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audience:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenExpiration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenExpiration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenSecret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issuer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        magicLinkTokenExpiration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        magicLinkTokenExpiration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        magicLinkTokenSecret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        magicLinkTokenSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshIdTokenExpiration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshIdTokenExpiration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshIdTokenSecret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshIdTokenSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const APP_RUNTIME_CONFIG = 'appRuntime';\nexport const JWT_CONFIG = 'jwt';\nexport const SENDGRID_CONFIG = 'sendgrid';\nexport const PGSQL_CONFIG = 'pgsql';\n\nexport interface AppRuntimeConfig {\n  appDomain: string;\n  appPort: number;\n  logserviceToken: string;\n  logSQL: boolean;\n}\n\nexport interface JwtConfig {\n  secret: string;\n  audience: string;\n  issuer: string;\n  expiration: string;\n  idTokenSecret: string;\n  idTokenExpiration: string;\n  refreshIdTokenSecret: string;\n  refreshIdTokenExpiration: string;\n  magicLinkTokenSecret: string;\n  magicLinkTokenExpiration: string;\n}\n\nexport interface SendGridConfig {\n  apiKey: string;\n  templates: { [key: string]: string };\n  senderEmail: string;\n}\n\nexport interface PgsqlDbConfig {\n  appRuntimeUsername: string;\n  appRuntimeUserPassword: string;\n  dbName: string;\n  host: string;\n  port: number;\n  shouldUseSsl: boolean;\n  rejectUnauthorized: boolean;\n  dropDb: boolean;\n  runMigrations: boolean;\n}\n\nexport const configuration = () => ({\n  appRuntime: {\n    appDomain: process.env.APP_DOMAIN,\n    appPort: process.env.APP_PORT,\n    logserviceToken: process.env.LOGSERVICE_TOKEN,\n    logSQL: process.env.LOG_SQL_STATEMENTS,\n  },\n  jwt: {\n    audience: process.env.JWT_AUD,\n    issuer: process.env.JWT_ISS,\n    secret: process.env.JWT_SECRET,\n    expiration: process.env.JWT_EXPIRATION,\n    idTokenSecret: process.env.JWT_ID_TOKEN_SECRET,\n    idTokenExpiration: process.env.JWT_ID_TOKEN_EXPIRATION,\n    refreshIdTokenSecret: process.env.JWT_REFRESH_ID_TOKEN_SECRET,\n    refreshIdTokenExpiration: process.env.JWT_REFRESH_ID_TOKEN_EXPIRATION,\n    magicLinkTokenSecret: process.env.JWT_MAGICLINK_SECRET,\n    magicLinkTokenExpiration: process.env.JWT_MAGICLINK_EXPIRATION,\n  },\n  sendgrid: {\n    apiKey: process.env.SENDGRID_API_KEY,\n    templates: {\n      magicLinkEmailId: process.env.SENDGRID_SENDGRID_MAGIC_LINK_EMAIL_ID,\n    },\n    senderEmail: process.env.SENDGRID_SENDER_EMAIL,\n  },\n  pgsql: {\n    host: process.env.POSTGRES_HOST,\n    appRuntimeUsername: process.env.APP_RUNTIME_USER,\n    appRuntimeUserPassword: process.env.APP_RUNTIME_USER_PASSWORD,\n    dbName: process.env.POSTGRES_DB,\n    port: process.env.POSTGRES_PORT,\n    shouldUseSsl: process.env.POSTGRES_SHOULD_USE_SSL,\n    rejectUnauthorized: process.env.POSTGRES_REJECT_UNAUTHORIZED,\n    dropDb: process.env.POSTGRES_DROP_DB,\n    runMigrations: process.env.POSTGRES_RUN_MIGRATIONS,\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtMagicLinkGuard.html":{"url":"injectables/JwtMagicLinkGuard.html","title":"injectable - JwtMagicLinkGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtMagicLinkGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-magic-link.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JwtMagiclinkStrategy } from '@app/auth/strategies/jwt-magiclink.strategy';\nimport { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtMagicLinkGuard extends AuthGuard(JwtMagiclinkStrategy) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtMagicLinkStrategy.html":{"url":"injectables/JwtMagicLinkStrategy.html","title":"injectable - JwtMagicLinkStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtMagicLinkStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt-magiclink.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt-magiclink.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt-magiclink.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { JWT_CONFIG, JwtConfig } from '@app/app.config';\nimport { AuthenticatedUserDto } from '@app/auth/dto/authenticated-user.dto';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nexport const JwtMagiclinkStrategy = 'jwt-magiclink-strategy';\n\n@Injectable()\nexport class JwtMagicLinkStrategy extends PassportStrategy(Strategy, JwtMagiclinkStrategy) {\n  constructor(configService: ConfigService) {\n    const { magicLinkTokenSecret } = configService.get(JWT_CONFIG);\n    super({\n      jwtFromRequest: ExtractJwt.fromUrlQueryParameter('token'),\n      ignoreExpiration: false,\n      secretOrKey: magicLinkTokenSecret,\n    });\n  }\n\n  async validate(payload: any): Promise {\n    return {\n      id: payload.sub,\n      email: payload.email,\n      firstName: payload.firstName,\n      lastName: payload.lastName,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-refresh.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JwtRefreshStrategyName } from '@app/auth/strategies/jwt-refresh.strategy';\nimport { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtRefreshGuard extends AuthGuard(JwtRefreshStrategyName) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshStrategy.html":{"url":"injectables/JwtRefreshStrategy.html","title":"injectable - JwtRefreshStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt-refresh.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt-refresh.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt-refresh.strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RefreshUserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { JWT_CONFIG, JwtConfig } from '@app/app.config';\nimport { RefreshUserDto } from '@app/auth/dto/refresh-user.dto';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nexport const JwtRefreshStrategyName = 'jwt-refresh-strategy';\n\n@Injectable()\nexport class JwtRefreshStrategy extends PassportStrategy(Strategy, JwtRefreshStrategyName) {\n  constructor(configService: ConfigService) {\n    const { refreshIdTokenSecret } = configService.get(JWT_CONFIG);\n    super({\n      jwtFromRequest: ExtractJwt.fromUrlQueryParameter('token'),\n      ignoreExpiration: false,\n      secretOrKey: refreshIdTokenSecret,\n    });\n  }\n\n  validate(payload: any): RefreshUserDto {\n    return {\n      id: payload.sub,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, classMapper: Mapper)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        classMapper\n                                                  \n                                                        \n                                                                    Mapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: TokenPayloadDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayloadDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LocalUserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { JWT_CONFIG, JwtConfig } from '@app/app.config';\nimport { LocalUserDto } from '@app/auth/dto/local-user.dto';\nimport { TokenPayloadDto } from '@app/auth/dto/token-payload.dto';\nimport { Mapper } from '@automapper/core';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { InjectMapper } from '@timonmasberg/automapper-nestjs';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    configService: ConfigService,\n    @InjectMapper() private readonly classMapper: Mapper,\n  ) {\n    const jwtConfig = configService.get(JWT_CONFIG);\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConfig.secret,\n    });\n  }\n\n  validate(payload: TokenPayloadDto): LocalUserDto {\n    const user = this.classMapper.map(payload, TokenPayloadDto, LocalUserDto);\n    user.permissions = payload.permissions;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalUserDto.html":{"url":"classes/LocalUserDto.html","title":"class - LocalUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/local-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                applicationUserId\n                            \n                            \n                                    \n                                companyUserId\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                executing_company\n                            \n                            \n                                    \n                                family_name\n                            \n                            \n                                    \n                                given_name\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        applicationUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/local-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/local-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/local-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        executing_company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/local-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        family_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/local-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        given_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/local-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/local-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/local-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/local-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Permission } from '@app/users/enums/permissions.enum';\nimport { AutoMap } from '@automapper/classes';\nimport { IsUUID } from 'class-validator';\n\nexport class LocalUserDto {\n  @AutoMap()\n  name: string;\n\n  @AutoMap()\n  given_name: string;\n\n  @AutoMap()\n  family_name: string;\n\n  @AutoMap()\n  email: string;\n\n  @AutoMap()\n  @IsUUID()\n  applicationUserId: string;\n\n  @AutoMap()\n  companyUserId: string;\n\n  @AutoMap()\n  roles: string[];\n\n  @AutoMap()\n  permissions: Permission[];\n\n  @AutoMap()\n  executing_company: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PgsqlDbConfig.html":{"url":"interfaces/PgsqlDbConfig.html","title":"interface - PgsqlDbConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PgsqlDbConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            appRuntimeUsername\n                                        \n                                \n                                \n                                        \n                                            appRuntimeUserPassword\n                                        \n                                \n                                \n                                        \n                                            dbName\n                                        \n                                \n                                \n                                        \n                                            dropDb\n                                        \n                                \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            rejectUnauthorized\n                                        \n                                \n                                \n                                        \n                                            runMigrations\n                                        \n                                \n                                \n                                        \n                                            shouldUseSsl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appRuntimeUsername\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appRuntimeUsername:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        appRuntimeUserPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appRuntimeUserPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dbName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dbName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropDb\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dropDb:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rejectUnauthorized\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rejectUnauthorized:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        runMigrations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        runMigrations:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shouldUseSsl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shouldUseSsl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const APP_RUNTIME_CONFIG = 'appRuntime';\nexport const JWT_CONFIG = 'jwt';\nexport const SENDGRID_CONFIG = 'sendgrid';\nexport const PGSQL_CONFIG = 'pgsql';\n\nexport interface AppRuntimeConfig {\n  appDomain: string;\n  appPort: number;\n  logserviceToken: string;\n  logSQL: boolean;\n}\n\nexport interface JwtConfig {\n  secret: string;\n  audience: string;\n  issuer: string;\n  expiration: string;\n  idTokenSecret: string;\n  idTokenExpiration: string;\n  refreshIdTokenSecret: string;\n  refreshIdTokenExpiration: string;\n  magicLinkTokenSecret: string;\n  magicLinkTokenExpiration: string;\n}\n\nexport interface SendGridConfig {\n  apiKey: string;\n  templates: { [key: string]: string };\n  senderEmail: string;\n}\n\nexport interface PgsqlDbConfig {\n  appRuntimeUsername: string;\n  appRuntimeUserPassword: string;\n  dbName: string;\n  host: string;\n  port: number;\n  shouldUseSsl: boolean;\n  rejectUnauthorized: boolean;\n  dropDb: boolean;\n  runMigrations: boolean;\n}\n\nexport const configuration = () => ({\n  appRuntime: {\n    appDomain: process.env.APP_DOMAIN,\n    appPort: process.env.APP_PORT,\n    logserviceToken: process.env.LOGSERVICE_TOKEN,\n    logSQL: process.env.LOG_SQL_STATEMENTS,\n  },\n  jwt: {\n    audience: process.env.JWT_AUD,\n    issuer: process.env.JWT_ISS,\n    secret: process.env.JWT_SECRET,\n    expiration: process.env.JWT_EXPIRATION,\n    idTokenSecret: process.env.JWT_ID_TOKEN_SECRET,\n    idTokenExpiration: process.env.JWT_ID_TOKEN_EXPIRATION,\n    refreshIdTokenSecret: process.env.JWT_REFRESH_ID_TOKEN_SECRET,\n    refreshIdTokenExpiration: process.env.JWT_REFRESH_ID_TOKEN_EXPIRATION,\n    magicLinkTokenSecret: process.env.JWT_MAGICLINK_SECRET,\n    magicLinkTokenExpiration: process.env.JWT_MAGICLINK_EXPIRATION,\n  },\n  sendgrid: {\n    apiKey: process.env.SENDGRID_API_KEY,\n    templates: {\n      magicLinkEmailId: process.env.SENDGRID_SENDGRID_MAGIC_LINK_EMAIL_ID,\n    },\n    senderEmail: process.env.SENDGRID_SENDER_EMAIL,\n  },\n  pgsql: {\n    host: process.env.POSTGRES_HOST,\n    appRuntimeUsername: process.env.APP_RUNTIME_USER,\n    appRuntimeUserPassword: process.env.APP_RUNTIME_USER_PASSWORD,\n    dbName: process.env.POSTGRES_DB,\n    port: process.env.POSTGRES_PORT,\n    shouldUseSsl: process.env.POSTGRES_SHOULD_USE_SSL,\n    rejectUnauthorized: process.env.POSTGRES_REJECT_UNAUTHORIZED,\n    dropDb: process.env.POSTGRES_DROP_DB,\n    runMigrations: process.env.POSTGRES_RUN_MIGRATIONS,\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenPayload.html":{"url":"classes/RefreshTokenPayload.html","title":"class - RefreshTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/refresh-token-payload.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                aud\n                            \n                            \n                                    \n                                    Optional\n                                iat\n                            \n                            \n                                    \n                                    Optional\n                                iss\n                            \n                            \n                                    \n                                    Optional\n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        aud\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-token-payload.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        iat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-token-payload.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        iss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-token-payload.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-token-payload.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\n\nexport class RefreshTokenPayload {\n  @AutoMap()\n  iss?: string;\n\n  @AutoMap()\n  sub?: string;\n\n  @AutoMap()\n  aud?: string;\n\n  @AutoMap()\n  iat?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshUserDto.html":{"url":"classes/RefreshUserDto.html","title":"class - RefreshUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/refresh-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refresh-user.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RefreshUserDto {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestMagicLinkDto.html":{"url":"classes/RequestMagicLinkDto.html","title":"class - RequestMagicLinkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestMagicLinkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/request-magic-link.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This Dto is used when a user requests a magic link.\nUsed exclusively by the /request-email-login endpoint in auth.controller.ts\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/request-magic-link.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\n/**\n * This Dto is used when a user requests a magic link.\n * Used exclusively by the `/request-email-login` endpoint in auth.controller.ts\n */\nexport class RequestMagicLinkDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendGridConfig.html":{"url":"interfaces/SendGridConfig.html","title":"interface - SendGridConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SendGridConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiKey\n                                        \n                                \n                                \n                                        \n                                            senderEmail\n                                        \n                                \n                                \n                                        \n                                            templates\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        senderEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        senderEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templates:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const APP_RUNTIME_CONFIG = 'appRuntime';\nexport const JWT_CONFIG = 'jwt';\nexport const SENDGRID_CONFIG = 'sendgrid';\nexport const PGSQL_CONFIG = 'pgsql';\n\nexport interface AppRuntimeConfig {\n  appDomain: string;\n  appPort: number;\n  logserviceToken: string;\n  logSQL: boolean;\n}\n\nexport interface JwtConfig {\n  secret: string;\n  audience: string;\n  issuer: string;\n  expiration: string;\n  idTokenSecret: string;\n  idTokenExpiration: string;\n  refreshIdTokenSecret: string;\n  refreshIdTokenExpiration: string;\n  magicLinkTokenSecret: string;\n  magicLinkTokenExpiration: string;\n}\n\nexport interface SendGridConfig {\n  apiKey: string;\n  templates: { [key: string]: string };\n  senderEmail: string;\n}\n\nexport interface PgsqlDbConfig {\n  appRuntimeUsername: string;\n  appRuntimeUserPassword: string;\n  dbName: string;\n  host: string;\n  port: number;\n  shouldUseSsl: boolean;\n  rejectUnauthorized: boolean;\n  dropDb: boolean;\n  runMigrations: boolean;\n}\n\nexport const configuration = () => ({\n  appRuntime: {\n    appDomain: process.env.APP_DOMAIN,\n    appPort: process.env.APP_PORT,\n    logserviceToken: process.env.LOGSERVICE_TOKEN,\n    logSQL: process.env.LOG_SQL_STATEMENTS,\n  },\n  jwt: {\n    audience: process.env.JWT_AUD,\n    issuer: process.env.JWT_ISS,\n    secret: process.env.JWT_SECRET,\n    expiration: process.env.JWT_EXPIRATION,\n    idTokenSecret: process.env.JWT_ID_TOKEN_SECRET,\n    idTokenExpiration: process.env.JWT_ID_TOKEN_EXPIRATION,\n    refreshIdTokenSecret: process.env.JWT_REFRESH_ID_TOKEN_SECRET,\n    refreshIdTokenExpiration: process.env.JWT_REFRESH_ID_TOKEN_EXPIRATION,\n    magicLinkTokenSecret: process.env.JWT_MAGICLINK_SECRET,\n    magicLinkTokenExpiration: process.env.JWT_MAGICLINK_EXPIRATION,\n  },\n  sendgrid: {\n    apiKey: process.env.SENDGRID_API_KEY,\n    templates: {\n      magicLinkEmailId: process.env.SENDGRID_SENDGRID_MAGIC_LINK_EMAIL_ID,\n    },\n    senderEmail: process.env.SENDGRID_SENDER_EMAIL,\n  },\n  pgsql: {\n    host: process.env.POSTGRES_HOST,\n    appRuntimeUsername: process.env.APP_RUNTIME_USER,\n    appRuntimeUserPassword: process.env.APP_RUNTIME_USER_PASSWORD,\n    dbName: process.env.POSTGRES_DB,\n    port: process.env.POSTGRES_PORT,\n    shouldUseSsl: process.env.POSTGRES_SHOULD_USE_SSL,\n    rejectUnauthorized: process.env.POSTGRES_REJECT_UNAUTHORIZED,\n    dropDb: process.env.POSTGRES_DROP_DB,\n    runMigrations: process.env.POSTGRES_RUN_MIGRATIONS,\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Somename1693507040444.html":{"url":"classes/Somename1693507040444.html","title":"class - Somename1693507040444","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Somename1693507040444\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1693507040444-somename.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Somename1693507040444'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1693507040444-somename.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1693507040444-somename.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1693507040444-somename.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class Somename1693507040444 implements MigrationInterface {\n    name = 'Somename1693507040444'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`CREATE TABLE \"user_entity\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP(3) NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP(3) NOT NULL DEFAULT now(), \"firstName\" character varying, \"lastName\" character varying, \"email\" character varying NOT NULL, CONSTRAINT \"PK_b54f8ea623b17094db7667d8206\" PRIMARY KEY (\"id\"))`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`DROP TABLE \"user_entity\"`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenPayloadDto.html":{"url":"classes/TokenPayloadDto.html","title":"class - TokenPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/token-payload.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                This class represents what is inside the id Token or Access Token\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                aud\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                family_name\n                            \n                            \n                                    \n                                given_name\n                            \n                            \n                                    \n                                    Optional\n                                iat\n                            \n                            \n                                    \n                                    Optional\n                                iss\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                sub\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        aud\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token-payload.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token-payload.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        family_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token-payload.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        given_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token-payload.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        iat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token-payload.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        iss\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token-payload.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token-payload.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token-payload.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token-payload.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token-payload.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Permission } from '@app/users/enums/permissions.enum';\nimport { AutoMap } from '@automapper/classes';\n\n/**\n * This class represents what is inside the id Token or Access Token\n */\nexport class TokenPayloadDto {\n  @AutoMap()\n  iss?: string;\n\n  @AutoMap()\n  sub: string;\n\n  @AutoMap()\n  aud?: string;\n\n  @AutoMap()\n  iat?: number;\n\n  @AutoMap()\n  name: string;\n\n  @AutoMap()\n  given_name: string;\n\n  @AutoMap()\n  family_name: string;\n\n  @AutoMap()\n  email: string;\n\n  @AutoMap()\n  permissions: Permission[];\n\n  @AutoMap()\n  roles: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AutoMap } from '@automapper/classes';\nimport { IsEmail, IsNotEmpty, IsUUID } from 'class-validator';\n\nexport class UserDto {\n  @IsUUID()\n  @AutoMap()\n  id: string;\n\n  @IsNotEmpty()\n  @AutoMap()\n  firstName: string;\n\n  @IsNotEmpty()\n  @AutoMap()\n  lastName: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @AutoMap()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@AutoMap()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity } from '@app/lib/base.entity';\nimport { AutoMap } from '@automapper/classes';\nimport { Column, Entity } from 'typeorm';\n\n@Entity()\nexport class UserEntity extends BaseEntity {\n  @Column({\n    nullable: true,\n  })\n  @AutoMap()\n  firstName: string;\n\n  @Column({\n    nullable: true,\n  })\n  @AutoMap()\n  lastName: string;\n\n  @Column()\n  @AutoMap()\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserProfile\n\nUserProfile\n\nUserModule -->\n\nUserProfile->UserModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserProfile\n                        \n                        \n                            UserRepository\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UserEntity } from '@app/users/user.entity';\nimport { UserProfile } from '@app/users/user.profile';\nimport { UserRepository } from '@app/users/user.repository';\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserEntity])],\n  providers: [UserService, UserRepository, UserProfile],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProfile.html":{"url":"injectables/UserProfile.html","title":"injectable - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.profile.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AutomapperProfile\n            \n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    profile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapper: Mapper)\n                    \n                \n                        \n                            \n                                Defined in src/users/user.profile.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                    Mapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        profile\n                    \n                \n\n                \n                    \n                        getprofile()\n                    \n                \n                            \n                                \n                                    Defined in src/users/user.profile.ts:14\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { CreateUserDto } from '@app/users/dto/create-user.dto';\nimport { UserDto } from '@app/users/dto/user.dto';\nimport { UserEntity } from '@app/users/user.entity';\nimport { createMap, Mapper, MappingProfile } from '@automapper/core';\nimport { Injectable } from '@nestjs/common';\nimport { AutomapperProfile, InjectMapper } from '@timonmasberg/automapper-nestjs';\n\n@Injectable()\nexport class UserProfile extends AutomapperProfile {\n  constructor(@InjectMapper() mapper: Mapper) {\n    super(mapper);\n  }\n\n  override get profile(): MappingProfile {\n    return (mapper) => {\n      createMap(mapper, UserEntity, UserDto);\n      createMap(mapper, UserDto, UserEntity);\n      createMap(mapper, CreateUserDto, UserEntity);\n      createMap(mapper, UserEntity, CreateUserDto);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/users/user.repository.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { UserEntity } from '@app/users/user.entity';\nimport { Injectable, Scope } from '@nestjs/common';\nimport { DataSource, Repository } from 'typeorm';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UserRepository extends Repository {\n  constructor(dataSource: DataSource) {\n    super(UserEntity, dataSource.createEntityManager());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAsync\n                            \n                            \n                                    Async\n                                findOneByEmailAsync\n                            \n                            \n                                    Async\n                                findOneByIdAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: UserRepository, classMapper: Mapper)\n                    \n                \n                        \n                            \n                                Defined in src/users/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        classMapper\n                                                  \n                                                        \n                                                                    Mapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAsync(createDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByEmailAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmailAsync(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateUserDto } from '@app/users/dto/create-user.dto';\nimport { UserDto } from '@app/users/dto/user.dto';\nimport { UserEntity } from '@app/users/user.entity';\nimport { UserRepository } from '@app/users/user.repository';\nimport { Mapper } from '@automapper/core';\nimport { Injectable } from '@nestjs/common';\nimport { InjectMapper } from '@timonmasberg/automapper-nestjs';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private repository: UserRepository,\n    @InjectMapper() private readonly classMapper: Mapper,\n  ) {}\n\n  async findOneByEmailAsync(email: string): Promise {\n    const userEntity = await this.repository.findOneBy({ email: email });\n\n    return await this.classMapper.mapAsync(userEntity, UserEntity, UserDto);\n  }\n\n  async findOneByIdAsync(id: string): Promise {\n    const userEntity = await this.repository.findOneBy({ id: id });\n\n    return await this.classMapper.mapAsync(userEntity, UserEntity, UserDto);\n  }\n\n  async createAsync(createDto: CreateUserDto): Promise {\n    let userEntity: UserEntity = await this.classMapper.mapAsync(createDto, CreateUserDto, UserEntity);\n\n    userEntity = await this.repository.save(userEntity);\n\n    return await this.classMapper.mapAsync(userEntity, UserEntity, UserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.config.ts\n            \n            interface\n            AppRuntimeConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            interface\n            JwtConfig\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            interface\n            PgsqlDbConfig\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            interface\n            SendGridConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            variable\n            APP_RUNTIME_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            variable\n            JWT_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            variable\n            PGSQL_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.config.ts\n            \n            variable\n            SENDGRID_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            formatErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.profile.ts\n            \n            injectable\n            AuthProfile\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/auth/decorators/permissions.decorator.ts\n            \n            variable\n            Permissions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/permissions.decorator.ts\n            \n            variable\n            PERMISSIONS_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-success.dto.ts\n            \n            class\n            AuthSuccessDto\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/auth/dto/authenticated-user.dto.ts\n            \n            class\n            AuthenticatedUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/local-user.dto.ts\n            \n            class\n            LocalUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/auth/dto/refresh-token-payload.dto.ts\n            \n            class\n            RefreshTokenPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/refresh-user.dto.ts\n            \n            class\n            RefreshUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/request-magic-link.dto.ts\n            \n            class\n            RequestMagicLinkDto\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/auth/dto/token-payload.dto.ts\n            \n            class\n            TokenPayloadDto\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-magic-link.guard.ts\n            \n            injectable\n            JwtMagicLinkGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-refresh.guard.ts\n            \n            injectable\n            JwtRefreshGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt-magiclink.strategy.ts\n            \n            injectable\n            JwtMagicLinkStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt-magiclink.strategy.ts\n            \n            variable\n            JwtMagiclinkStrategy\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt-refresh.strategy.ts\n            \n            injectable\n            JwtRefreshStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt-refresh.strategy.ts\n            \n            variable\n            JwtRefreshStrategyName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/communication/email.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/filters/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lib/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/lib/database_logger.ts\n            \n            class\n            DatabaseLogger\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/logging.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logging.ts\n            \n            variable\n            getTransports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logging.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logging.ts\n            \n            variable\n            logtail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logging.ts\n            \n            variable\n            transports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/app_logger.middleware.ts\n            \n            injectable\n            AppLoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/migrations/1693507040444-somename.ts\n            \n            class\n            Somename1693507040444\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.profile.ts\n            \n            injectable\n            UserProfile\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                test/jest-controller.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/jest-e2e.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/jest-unit.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                typeOrm.config.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @automapper/classes : ^8.7.7\n        \n            @faker-js/faker : ^8.0.2\n        \n            @golevelup/ts-jest : ^0.4.0\n        \n            @logtail/node : ^0.4.6\n        \n            @logtail/winston : ^0.4.6\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.0\n        \n            @nestjs/passport : ^10.0.1\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.9\n        \n            @nestjs/terminus : ^10.1.1\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            @sendgrid/mail : ^7.7.0\n        \n            @timonmasberg/automapper-nestjs : ^0.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.3.1\n        \n            nest-winston : ^1.9.4\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n        \n            uuid : ^9.0.0\n        \n            winston : ^3.10.0\n        \n            winston-daily-rotate-file : ^4.7.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EmailTemplate   (src/.../email_templates.enum.ts)\n                        \n                        \n                            Permission   (src/.../permissions.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/communication/email_templates.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        EmailTemplate\n                    \n                \n                        \n                            \n                                 MagicLinkEmail\n                            \n                        \n                        \n                            \n                                Value : magicLinkEmailId\n                            \n                        \n            \n        \n\n    src/users/enums/permissions.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 DEMO_PERM\n                            \n                        \n                        \n                            \n                                Value : demo.perm\n                            \n                        \n                        \n                            \n                                 CREATE_COMPANY\n                            \n                        \n                        \n                            \n                                Value : create.company\n                            \n                        \n                        \n                            \n                                 READ_COMPANY\n                            \n                        \n                        \n                            \n                                Value : read.company\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTechnical Details\nEven though some of the info here span across the repo, such as the Version system. We detail it inside this Technical\nREADME within the main src folder.\nTable of Contents\n\nApplication\nHealthCheck\nContainerization\nVersioning\nGit Specifics\nEditor\nLogging\nSwagger\nAuthentication\nDatabase\nLinks\n\n\nApplication\nThe application runs by default on port 3000. Please edit the .env.YOUR-ENV file to change it.\n\nHealthCheck\nThe application utilizes the package terminus to do healthchecks against different\n\"scopes\". The default check is that of the Database.\nThere are two endpoints:\n\n/v1/health which actually checks the health status of services & DB.\n/v1/health/q which just returns 1. This should be a faster check if your API is actually up.\n\n\nContainerization\nThe application comes by default with a simple container approach using Docker. You can find everything within\nDockerfile regarding the container and if you wish to run it using docker-compose you can use the\ndocker-compose.yml file.\nVersioning\nWe release using GitVersion (https://github.com/GitTools/GitVersion)\nhttps://gitversion.net/docs/reference/intro-to-semver\n\nwe push from PR & Master\nwe use Mainline mode https://gitversion.net/docs/reference/versioning-modes/mainline-development\nand lastly we increment versions based on commits:\n\nmajor-version-bump-message: '\\+semver:\\s?(breaking|major)'\nminor-version-bump-message: '\\+semver:\\s?(feature|minor)'\npatch-version-bump-message: '\\+semver:\\s?(fix|patch|task|info)'For example, a commit message for a feature should look like this +semver: feature  following the description of the\nchanges.\nRefer to the GitVersion.yml file for changes.\n\nGit\nIn order to maintain consistency across any usage of the repo there are a few Git related changes.\n\nUsing the .gitattributes file we make sure the ending of all files when being committed are that\nof LF regardless of the OS you are working under.\n\nUsing the .gitignore file we make sure that not every file inside the repo when created locally is\npushed to the remote repository. For example, test result results generated during local testing.\n\n\n\nEditor\nIn order to keep a uniform style of the codebase, we employ the use of the Editorconfig file.\nMost code editors/IDE these days support the use of this file.\nIt is worth mentioning that .editorconfig files work on a hierarchy based on folder levels. Therefore if you wish to\nhave in one folder a different style you are free to add another .editorconfig file.\n\nLogging\nLogging requests is done using a battle-tested package named winston. For those familiar also with simple express\nsetups, it is probably the default package for logging.\nIn combination as we wish to send our logs to Logtail (Now known as Betterstack) we use their own package to change the\ntransports. If you wish to change the logging service, all you need to do is add a different transport on the\nlogging.ts file.\n\nSwagger\n\nAuthentication\nThe authentication system uses a \"MagicLink\"/\"Passwordless\" approach. There is no password involved and the only way for\nthe user to be authenticated is by clicking on a link which is sent via Email.\nThe flow is as follows: login/register -> sent email with magic link -> receive JWT token bundle\nThe JWT Token bundle contains the following:\n/**\n * This class is a wrapper dto that is sent after authentication.\n * The idToken is used to get an accessToken\n */\nexport class AuthSuccessDto {\n  idToken: string;\n  refreshToken: string;\n  userId: string;\n}If we deconstruct the above we see 3 different properties:\n\nidToken: This is the JWT-Token which you can exchange for an AccessToken. IdTokens are only used for acquiring the\nAccessToken and do not have any other access.\n\nrefreshToken: This is another JWT-Token which is used to get a new IdToken after the current IdToken has expired. This\nis commonly used when a user has logged in but is inactive for X period of time. Then instead of forcing them through\nthe whole re-login process we use the refreshToken to get our Tokens refreshed.\n\nuserId: Quite self-explanatory, the Id of the user.\n\n\n\nDatabase\nThe API uses TypeOrm. This allows the API to use an Orm instead of raw SQL, with the added bonus\nof being able to handle different databases if we wish so. Currently it is being developed against PostgreSQL using\ndocker for the db instance and Neon for an on-cloud database instance - which will be utilized by\nour CI pipeline.\nA few things about TypeOrm\n\nwhen new entities are added or current are edited a migration file needs to be created. Thankfully TypeOrm provide us\nwith that functionality and by using custom npm commands it is as easy as npm run typeorm:generate-migration\n\nthe migration file then needs to be applied to the target db instance, again using our custom made commands. It should\nbe noted that during the migration generation it compares the code entity representation with the status of the\ntarget db. This is called code-first database design.\n\n\nLogging SQL Statements\nThe application uses the DatabaseLogger in order to log different SQL related\ninfo. Some are less critical than others and in order to avoid logging highly sensitive data without actual need, the\nlogger distinguishes different use-cases such as logQueryError versus logQuery.\nThe application configuration has a value logSQL which is true will log every query. This comes by default as true,\nbut it is advised to disable it for production environments due to security concerns.\n\n🔗 Links\n\n\n\nFunction\nENV\nURL\n\n\n\n\nBase URL\nLocal\nhttp://localhost:3000/\n\n\nAPI HealthCheck\nLocal\nhttp://localhost:8000/v1/health\n\n\nAPI HealthCheck\nLocal\nhttp://localhost:8000/v1/health/q\n\n\nAPI Swagger UI\nLocal\nhttp://localhost:8000/api\n\n\nAPI Swagger JSON\nLocal\nhttp://localhost:8000/api-json\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommunicationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommunicationModule\n\n\n\ncluster_CommunicationModule_exports\n\n\n\ncluster_CommunicationModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCommunicationModule\n\nCommunicationModule\n\nAuthModule -->\n\nCommunicationModule->AuthModule\n\n\n\nAppModule -->\n\nCommunicationModule->AppModule\n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nCommunicationModule->EmailService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtMagicLinkStrategy\n\nJwtMagicLinkStrategy\n\nAuthModule -->\n\nJwtMagicLinkStrategy->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nCommunicationModule -->\n\nEmailService->CommunicationModule\n\n\n\n\n\nUserProfile\n\nUserProfile\n\nUserModule -->\n\nUserProfile->UserModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUserModule -->\n\nUserRepository->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APP_RUNTIME_CONFIG   (src/.../app.config.ts)\n                        \n                        \n                            appConfig   (src/.../logging.ts)\n                        \n                        \n                            config   (test/.../jest-controller.config.ts)\n                        \n                        \n                            config   (test/.../jest-e2e.config.ts)\n                        \n                        \n                            config   (test/.../jest-unit.config.ts)\n                        \n                        \n                            configService   (typeOrm.config.ts)\n                        \n                        \n                            configuration   (src/.../app.config.ts)\n                        \n                        \n                            formatErrors   (src/.../app.module.ts)\n                        \n                        \n                            getTransports   (src/.../logging.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            JWT_CONFIG   (src/.../app.config.ts)\n                        \n                        \n                            JwtMagiclinkStrategy   (src/.../jwt-magiclink.strategy.ts)\n                        \n                        \n                            JwtRefreshStrategyName   (src/.../jwt-refresh.strategy.ts)\n                        \n                        \n                            logger   (src/.../logging.ts)\n                        \n                        \n                            logtail   (src/.../logging.ts)\n                        \n                        \n                            Permissions   (src/.../permissions.decorator.ts)\n                        \n                        \n                            PERMISSIONS_KEY   (src/.../permissions.decorator.ts)\n                        \n                        \n                            PGSQL_CONFIG   (src/.../app.config.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            SENDGRID_CONFIG   (src/.../app.config.ts)\n                        \n                        \n                            transports   (src/.../logging.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP_RUNTIME_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'appRuntime'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n  appRuntime: {\n    appDomain: process.env.APP_DOMAIN,\n    appPort: process.env.APP_PORT,\n    logserviceToken: process.env.LOGSERVICE_TOKEN,\n    logSQL: process.env.LOG_SQL_STATEMENTS,\n  },\n  jwt: {\n    audience: process.env.JWT_AUD,\n    issuer: process.env.JWT_ISS,\n    secret: process.env.JWT_SECRET,\n    expiration: process.env.JWT_EXPIRATION,\n    idTokenSecret: process.env.JWT_ID_TOKEN_SECRET,\n    idTokenExpiration: process.env.JWT_ID_TOKEN_EXPIRATION,\n    refreshIdTokenSecret: process.env.JWT_REFRESH_ID_TOKEN_SECRET,\n    refreshIdTokenExpiration: process.env.JWT_REFRESH_ID_TOKEN_EXPIRATION,\n    magicLinkTokenSecret: process.env.JWT_MAGICLINK_SECRET,\n    magicLinkTokenExpiration: process.env.JWT_MAGICLINK_EXPIRATION,\n  },\n  sendgrid: {\n    apiKey: process.env.SENDGRID_API_KEY,\n    templates: {\n      magicLinkEmailId: process.env.SENDGRID_SENDGRID_MAGIC_LINK_EMAIL_ID,\n    },\n    senderEmail: process.env.SENDGRID_SENDER_EMAIL,\n  },\n  pgsql: {\n    host: process.env.POSTGRES_HOST,\n    appRuntimeUsername: process.env.APP_RUNTIME_USER,\n    appRuntimeUserPassword: process.env.APP_RUNTIME_USER_PASSWORD,\n    dbName: process.env.POSTGRES_DB,\n    port: process.env.POSTGRES_PORT,\n    shouldUseSsl: process.env.POSTGRES_SHOULD_USE_SSL,\n    rejectUnauthorized: process.env.POSTGRES_REJECT_UNAUTHORIZED,\n    dropDb: process.env.POSTGRES_DROP_DB,\n    runMigrations: process.env.POSTGRES_RUN_MIGRATIONS,\n  },\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        JWT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'jwt'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PGSQL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'pgsql'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SENDGRID_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sendgrid'\n                    \n                \n\n\n        \n    \n\n    src/logging.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : configuration().appRuntime\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransports\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): winston.transport | winston.transport[] => {\n  if (process.env.ENABLE_DEBUG_LOG_FILES) {\n    return [transports.console, transports.errorFile, transports.combinedFile];\n  }\n  return [transports.console, transports.logtail];\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : WinstonModule.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({\n      format: 'YYYY-MM-DD HH:mm:ss',\n    }),\n    winston.format.errors({ stack: true }),\n    winston.format.splat(),\n    winston.format.json(),\n  ),\n  transports: getTransports(),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logtail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logtail(appConfig.logserviceToken)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transports\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  console: new winston.transports.Console({\n    level: 'silly',\n    format: winston.format.combine(\n      winston.format.timestamp({\n        format: 'YYYY-MM-DD HH:mm:ss',\n      }),\n      winston.format.colorize({\n        colors: {\n          info: 'blue',\n          debug: 'yellow',\n          error: 'red',\n        },\n      }),\n      winston.format.printf((info) => {\n        return `${info.timestamp} [${info.level}] [${info.context ? info.context : info.stack}] ${info.message}`;\n      }),\n      // winston.format.align(),\n    ),\n  }),\n  combinedFile: new winstonDailyRotateFile({\n    dirname: 'logs',\n    filename: 'combined',\n    extension: '.log',\n    level: 'info',\n    maxFiles: '14d',\n  }),\n  errorFile: new winstonDailyRotateFile({\n    dirname: 'logs',\n    filename: 'error',\n    extension: '.log',\n    level: 'error',\n    maxFiles: '28d',\n  }),\n  logtail: new LogtailTransport(logtail),\n}\n                    \n                \n\n\n        \n    \n\n    test/jest-controller.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config\n\n                    \n                \n                \n                    \n                        Default value : {\n  verbose: true,\n  moduleFileExtensions: [...defaults.moduleFileExtensions, 'js', 'json', 'ts'],\n  rootDir: '../src',\n  moduleDirectories: ['/../', 'node_modules'],\n  moduleNameMapper: {\n    '@app/(.*)': '/../src/$1',\n  },\n  testEnvironment: 'node',\n  testRegex: 'controller.spec.ts$',\n  transform: {\n    '^.+\\\\.(t|j)s$': 'ts-jest',\n  },\n  reporters: ['default', 'jest-junit'],\n  collectCoverage: false,\n  coverageReporters: ['cobertura'],\n}\n                    \n                \n\n\n        \n    \n\n    test/jest-e2e.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config\n\n                    \n                \n                \n                    \n                        Default value : {\n  verbose: true,\n  moduleFileExtensions: [...defaults.moduleFileExtensions, 'js', 'json', 'ts'],\n  rootDir: '.',\n  moduleDirectories: ['/../', 'node_modules'],\n  moduleNameMapper: {\n    '@app/(.*)': '/../src/$1',\n  },\n  testEnvironment: 'node',\n  testRegex: '.e2e-spec.ts$',\n  transform: {\n    '^.+\\\\.(t|j)s$': 'ts-jest',\n  },\n  reporters: ['default', 'jest-junit'],\n  collectCoverage: false,\n  coverageReporters: ['cobertura'],\n}\n                    \n                \n\n\n        \n    \n\n    test/jest-unit.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config\n\n                    \n                \n                \n                    \n                        Default value : {\n  verbose: true,\n  moduleFileExtensions: [...defaults.moduleFileExtensions, 'js', 'json', 'ts'],\n  rootDir: '../src/',\n  moduleDirectories: ['/../', 'node_modules'],\n  moduleNameMapper: {\n    '@app/(.*)': '/../src/$1',\n  },\n  testEnvironment: 'node',\n  testRegex: '.service.spec.ts$',\n  transform: {\n    '^.+\\\\.(t|j)s$': 'ts-jest',\n  },\n  reporters: ['default', 'jest-junit'],\n  collectCoverage: false,\n  coverageReporters: ['cobertura'],\n}\n                    \n                \n\n\n        \n    \n\n    typeOrm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService()\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        formatErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (errors: ValidationError[], parentName = ''): Array => {\n  const formattedErrors = [];\n\n  for (const error of errors) {\n    if (Array.isArray(error.value) && !error.constraints) {\n      formattedErrors.push(formatErrors(error.children, error.property));\n    } else if (Array.isArray(error.children) && error.children.length) {\n      const ob = { name: `${parentName}.${error.property}`, errors: [] };\n      ob.errors = formatErrors(error.children);\n      formattedErrors.push(ob);\n    } else {\n      const err = {};\n      err[error.property] = Object.keys(error.constraints).map((p) => error.constraints[p]);\n      formattedErrors.push(err);\n    }\n  }\n\n  return formattedErrors.flat();\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): CustomDecorator => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/auth/strategies/jwt-magiclink.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JwtMagiclinkStrategy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'jwt-magiclink-strategy'\n                    \n                \n\n\n        \n    \n\n    src/auth/strategies/jwt-refresh.strategy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JwtRefreshStrategyName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'jwt-refresh-strategy'\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/permissions.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Permissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...permissions: Permission[]): CustomDecorator =>\n  SetMetadata(PERMISSIONS_KEY, permissions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERMISSIONS_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'permissions'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
